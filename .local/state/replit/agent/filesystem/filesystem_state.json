{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Kanguya Builders Website\n\n## Overview\n\nA professional construction company website built with a modern full-stack architecture for Kanguya Builders, an established Cape Town-based construction company with 14+ years of experience. The application showcases their authentic services, projects, and provides functionality for clients to request quotes, contact the company, and submit reviews. The site features authentic business information including their actual contact details, physical address, specialized services, and a comprehensive customer review system for feedback and ratings.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **React SPA**: Single-page application using React with TypeScript for type safety\n- **UI Framework**: Shadcn/ui components built on Radix UI primitives for accessible, customizable components\n- **Styling**: Tailwind CSS with custom design system featuring orange and blue brand colors\n- **State Management**: TanStack Query (React Query) for server state management and caching\n- **Routing**: Wouter for lightweight client-side routing (currently single page with smooth scrolling navigation)\n- **Form Handling**: React Hook Form with Zod validation for type-safe form validation\n- **Build Tool**: Vite for fast development and optimized production builds\n\n### Backend Architecture\n- **Runtime**: Node.js with Express.js server\n- **Language**: TypeScript throughout the entire stack\n- **API Design**: RESTful API endpoints under `/api` prefix\n- **Storage**: In-memory storage implementation (MemStorage) with interface for easy database migration\n- **Validation**: Zod schemas shared between client and server for consistent validation\n- **Development**: Hot reload with Vite integration in development mode\n\n### Data Layer\n- **Database**: Configured for PostgreSQL with Drizzle ORM\n- **Schema**: Type-safe database schema definitions using Drizzle\n- **Migrations**: Drizzle Kit for database migrations\n- **Connection**: Neon Database serverless driver for PostgreSQL connectivity\n- **Current State**: Using in-memory storage with sample data, ready for database migration\n\n### Key Features\n- **Project Showcase**: Display construction projects with images, descriptions, and categories\n- **Service Listings**: Comprehensive service offerings from new construction to maintenance\n- **Quote Requests**: Form-based quote request system with validation\n- **Contact Management**: Contact form for general inquiries\n- **Review System**: Customer review and rating system with approval workflow\n- **Responsive Design**: Mobile-first responsive design with smooth animations\n\n### Development Workflow\n- **Development**: `npm run dev` - runs Express server with Vite HMR\n- **Build**: `npm run build` - creates optimized production build\n- **Database**: `npm run db:push` - pushes schema changes to database\n- **Type Checking**: `npm run check` - TypeScript compilation check\n\n## External Dependencies\n\n### Database & ORM\n- **PostgreSQL**: Primary database (configured via DATABASE_URL)\n- **Neon Database**: Serverless PostgreSQL provider (@neondatabase/serverless)\n- **Drizzle ORM**: Type-safe SQL toolkit for database operations\n- **Drizzle Kit**: Database migrations and schema management\n\n### UI & Styling\n- **Radix UI**: Headless UI components for accessibility and customization\n- **Tailwind CSS**: Utility-first CSS framework\n- **Lucide React**: Icon library for consistent iconography\n- **React Icons**: Additional icons including social media icons\n\n### Forms & Validation\n- **React Hook Form**: Performant form library with minimal re-renders\n- **Zod**: TypeScript-first schema validation\n- **Hookform Resolvers**: Integration between React Hook Form and Zod\n\n### Development Tools\n- **Vite**: Build tool with HMR and optimizations\n- **TypeScript**: Type safety throughout the application\n- **ESBuild**: Fast JavaScript bundler for production builds\n- **Replit Integration**: Development environment plugins for Replit\n\n### Utilities\n- **TanStack Query**: Data fetching and caching\n- **Date-fns**: Date utility library\n- **Class Variance Authority**: Utility for creating variant-based component APIs\n- **clsx & Tailwind Merge**: Conditional className utilities","size_bytes":4288},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n        // Custom Kanguya Builders colors - Professional Navy Theme\n        \"navy-primary\": \"#1D4ED8\",\n        \"navy-secondary\": \"#2563EB\",\n        \"navy-dark\": \"#1E3A8A\",\n        \"navy-light\": \"#93C5FD\",\n        \"gray-neutral\": \"#9CA3AF\",\n        \"gray-light\": \"#2D3A5C\",\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n        inter: [\"Inter\", \"sans-serif\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3079},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/db.ts":{"content":"import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"@shared/schema\";\n\nneonConfig.webSocketConstructor = ws;\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\",\n  );\n}\n\nexport const pool = new Pool({ connectionString: process.env.DATABASE_URL });\nexport const db = drizzle({ client: pool, schema });\n","size_bytes":483},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertQuoteRequestSchema, insertContactMessageSchema, insertReviewSchema } from \"@shared/schema\";\nimport path from \"path\";\nimport fs from \"fs\";\nimport { z } from \"zod\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Serve project images from attached assets\n  app.get(\"/project-images/:filename\", (req, res) => {\n    const filename = req.params.filename;\n    const imagePath = path.join(process.cwd(), 'attached_assets', filename);\n    \n    // Check if file exists\n    if (!fs.existsSync(imagePath)) {\n      return res.status(404).json({ error: \"Image not found\" });\n    }\n    \n    // Set appropriate headers\n    res.setHeader('Content-Type', 'image/jpeg');\n    res.setHeader('Cache-Control', 'public, max-age=3600');\n    \n    // Stream the file\n    const stream = fs.createReadStream(imagePath);\n    stream.pipe(res);\n  });\n  // Get all projects\n  app.get(\"/api/projects\", async (req, res) => {\n    try {\n      const projects = await storage.getProjects();\n      res.json(projects);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch projects\" });\n    }\n  });\n\n  // Get single project\n  app.get(\"/api/projects/:id\", async (req, res) => {\n    try {\n      const project = await storage.getProject(req.params.id);\n      if (!project) {\n        return res.status(404).json({ message: \"Project not found\" });\n      }\n      res.json(project);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch project\" });\n    }\n  });\n\n\n\n  // Submit quote request\n  app.post(\"/api/quote-requests\", async (req, res) => {\n    try {\n      const validatedData = insertQuoteRequestSchema.parse(req.body);\n      const request = await storage.createQuoteRequest(validatedData);\n      res.status(201).json({ \n        message: \"Quote request submitted successfully. We'll contact you within 24 hours.\",\n        id: request.id \n      });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ \n          message: \"Invalid form data\", \n          errors: error.errors \n        });\n      }\n      res.status(500).json({ message: \"Failed to submit quote request\" });\n    }\n  });\n\n  // Submit contact message\n  app.post(\"/api/contact-messages\", async (req, res) => {\n    try {\n      const validatedData = insertContactMessageSchema.parse(req.body);\n      const message = await storage.createContactMessage(validatedData);\n      res.status(201).json({ \n        message: \"Message sent successfully. We'll get back to you soon.\",\n        id: message.id \n      });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ \n          message: \"Invalid form data\", \n          errors: error.errors \n        });\n      }\n      res.status(500).json({ message: \"Failed to send message\" });\n    }\n  });\n\n  // Submit review\n  app.post(\"/api/reviews\", async (req, res) => {\n    try {\n      const validatedData = insertReviewSchema.parse(req.body);\n      const review = await storage.createReview(validatedData);\n      res.status(201).json({ \n        message: \"Thank you for your review! It will be reviewed and published shortly.\",\n        id: review.id \n      });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ \n          message: \"Invalid form data\", \n          errors: error.errors \n        });\n      }\n      res.status(500).json({ message: \"Failed to submit review\" });\n    }\n  });\n\n  // Get approved reviews\n  app.get(\"/api/reviews/approved\", async (req, res) => {\n    try {\n      const reviews = await storage.getApprovedReviews();\n      res.json(reviews);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch reviews\" });\n    }\n  });\n\n  // Get all reviews (admin)\n  app.get(\"/api/reviews\", async (req, res) => {\n    try {\n      const reviews = await storage.getReviews();\n      res.json(reviews);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch reviews\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":4204},"server/storage.ts":{"content":"import { \n  type Project, \n  type InsertProject,\n  type QuoteRequest,\n  type InsertQuoteRequest,\n  type ContactMessage,\n  type InsertContactMessage,\n  type Review,\n  type InsertReview\n} from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  // Projects\n  getProjects(): Promise<Project[]>;\n  getProject(id: string): Promise<Project | undefined>;\n  createProject(project: InsertProject): Promise<Project>;\n\n  // Reviews\n  getReviews(): Promise<Review[]>;\n  getApprovedReviews(): Promise<Review[]>;\n  createReview(review: InsertReview): Promise<Review>;\n  approveReview(id: string): Promise<Review | undefined>;\n\n  // Quote Requests\n  createQuoteRequest(request: InsertQuoteRequest): Promise<QuoteRequest>;\n  getQuoteRequests(): Promise<QuoteRequest[]>;\n\n  // Contact Messages\n  createContactMessage(message: InsertContactMessage): Promise<ContactMessage>;\n  getContactMessages(): Promise<ContactMessage[]>;\n}\n\nexport class MemStorage implements IStorage {\n  private projects: Map<string, Project>;\n  private reviews: Map<string, Review>;\n  private quoteRequests: Map<string, QuoteRequest>;\n  private contactMessages: Map<string, ContactMessage>;\n\n  constructor() {\n    this.projects = new Map();\n    this.reviews = new Map();\n    this.quoteRequests = new Map();\n    this.contactMessages = new Map();\n\n    // Initialize with sample data\n    this.initializeData();\n  }\n\n  private initializeData() {\n    // Authentic Kanguya Builders projects\n    const sampleProjects: InsertProject[] = [\n      {\n        title: \"Camps Bay Cape Town Project\",\n        description: \"Professional tiling work in prestigious Camps Bay area\",\n        detailedDescription: \"This comprehensive tiling project in Camps Bay involved installing premium ceramic and porcelain tiles throughout a luxury residential property. Our team worked meticulously to ensure perfect alignment, waterproofing, and finishing that meets the high standards of this prestigious Cape Town location.\",\n        imageUrl: \"/project-images/WhatsApp Image 2025-09-02 at 17.41.06_1757324919936.jpeg\",\n        additionalImages: [\n          \"/project-images/WhatsApp Image 2025-09-02 at 17.41.06_1757324919936.jpeg\",\n          \"/project-images/WhatsApp Image 2025-09-02 at 17.41.07_1757324919935.jpeg\"\n        ],\n        location: \"Camps Bay, Cape Town\",\n        completedYear: \"2024\",\n        category: \"tiling\",\n        duration: \"3 weeks\",\n        clientName: \"Private Residential Client\",\n        projectScope: [\"Floor tiling\", \"Wall tiling\", \"Waterproofing\", \"Grouting and sealing\"],\n        challenges: \"Working with irregular surfaces and ensuring perfect water drainage in bathroom areas\",\n        solution: \"Applied advanced waterproofing membrane and used precision leveling techniques to achieve flawless tile installation\",\n        materials: [\"Premium porcelain tiles\", \"Waterproof membrane\", \"High-grade grout\", \"Tile adhesive\"],\n        teamSize: \"4 specialists\"\n      },\n      {\n        title: \"Sea Point Cape Town Project\",\n        description: \"Expert plastering services in Sea Point residential area\",\n        detailedDescription: \"Complete interior plastering renovation for a Sea Point apartment, including skim coating, texture application, and surface preparation for painting. The project required careful attention to match existing architectural features while providing a smooth, professional finish.\",\n        imageUrl: \"/project-images/WhatsApp Image 2025-09-02 at 17.41.12_1757324919934.jpeg\",\n        additionalImages: [\"/project-images/WhatsApp Image 2025-09-02 at 17.41.12_1757324919934.jpeg\"],\n        location: \"Sea Point, Cape Town\",\n        completedYear: \"2024\",\n        category: \"plastering\",\n        duration: \"2 weeks\",\n        clientName: \"Residential Property Owner\",\n        projectScope: [\"Interior wall plastering\", \"Ceiling repair\", \"Skim coating\", \"Surface preparation\"],\n        challenges: \"Working around existing fixtures and ensuring consistent texture across different wall surfaces\",\n        solution: \"Used specialized plastering techniques and premium materials to achieve uniform finish throughout the property\",\n        materials: [\"Gypsum plaster\", \"Bonding agent\", \"Mesh reinforcement\", \"Primer\"],\n        teamSize: \"3 plasterers\"\n      },\n      {\n        title: \"Green Point Floor Screeding\",\n        description: \"Professional floor screeding and plastering work\",\n        detailedDescription: \"Specialized floor screeding project in Green Point involving leveling concrete floors, applying screed compound, and preparing surfaces for final flooring installation. This technical project required precision to achieve perfect level floors throughout the building.\",\n        imageUrl: \"/project-images/WhatsApp Image 2025-09-02 at 17.46.39_1757324919931.jpeg\",\n        additionalImages: [\"/project-images/WhatsApp Image 2025-09-02 at 17.46.39_1757324919931.jpeg\"],\n        location: \"Green Point, Cape Town\",\n        completedYear: \"2024\",\n        category: \"plastering\",\n        duration: \"1 week\",\n        clientName: \"Commercial Property Developer\",\n        projectScope: [\"Floor screeding\", \"Surface leveling\", \"Moisture barrier installation\", \"Quality control\"],\n        challenges: \"Achieving perfect level across large floor areas with multiple drainage points\",\n        solution: \"Used laser-guided screeding equipment and high-performance screed materials\",\n        materials: [\"Cement screed\", \"Leveling compound\", \"Moisture barrier\", \"Reinforcement fiber\"],\n        teamSize: \"5 floor specialists\"\n      },\n      {\n        title: \"Claremont Cape Town Project\",\n        description: \"Professional tiling installation in Claremont\",\n        detailedDescription: \"Comprehensive tiling project in Claremont featuring custom tile patterns, bathroom waterproofing, and kitchen backsplash installation. The project showcased our expertise in both functional and decorative tiling applications.\",\n        imageUrl: \"/project-images/WhatsApp Image 2025-09-02 at 17.46.40_1757324919930.jpeg\",\n        additionalImages: [\"/project-images/WhatsApp Image 2025-09-02 at 17.46.40_1757324919930.jpeg\"],\n        location: \"Claremont, Cape Town\",\n        completedYear: \"2023\",\n        category: \"tiling\",\n        duration: \"4 weeks\",\n        clientName: \"Residential Homeowner\",\n        projectScope: [\"Bathroom tiling\", \"Kitchen backsplash\", \"Floor tiling\", \"Custom patterns\"],\n        challenges: \"Creating intricate tile patterns while maintaining waterproofing integrity\",\n        solution: \"Implemented advanced pattern layout techniques with premium waterproofing systems\",\n        materials: [\"Designer tiles\", \"Waterproof adhesive\", \"Decorative trim\", \"Sealed grout\"],\n        teamSize: \"3 tiling experts\"\n      },\n      {\n        title: \"Northlick Collect Bellville\",\n        description: \"Professional brickwork construction project\",\n        detailedDescription: \"Large-scale commercial brickwork project in Bellville involving structural wall construction, architectural features, and decorative brickwork elements. This project demonstrated our capability in both functional and aesthetic masonry work.\",\n        imageUrl: \"/project-images/WhatsApp Image 2025-09-02 at 17.41.12 (1)_1757324919933.jpeg\",\n        additionalImages: [\"/project-images/WhatsApp Image 2025-09-02 at 17.41.12 (1)_1757324919933.jpeg\"],\n        location: \"Bellville, Cape Town\",\n        completedYear: \"2023\",\n        category: \"brickwork\",\n        duration: \"8 weeks\",\n        clientName: \"Commercial Construction Company\",\n        projectScope: [\"Structural walls\", \"Decorative features\", \"Architectural elements\", \"Quality finishing\"],\n        challenges: \"Maintaining structural integrity while achieving complex architectural designs\",\n        solution: \"Used engineering-grade materials and precision construction techniques\",\n        materials: [\"Face brick\", \"Mortar mix\", \"Steel reinforcement\", \"Waterproof coating\"],\n        teamSize: \"6 bricklayers\"\n      },\n      {\n        title: \"Newlands Cape Town Project\",\n        description: \"Comprehensive landscaping and outdoor development\",\n        detailedDescription: \"Extensive outdoor renovation project in Newlands including garden design, paving installation, retaining walls, and drainage systems. This project transformed an outdoor space into a functional and beautiful landscape feature.\",\n        imageUrl: \"https://www.kanguyabuilders.com/public/upload/projects/pnpBQlDqo8nkYYskw6IIQW77HwDhOm.jpg\",\n        additionalImages: [\"https://www.kanguyabuilders.com/public/upload/projects/pnpBQlDqo8nkYYskw6IIQW77HwDhOm.jpg\"],\n        location: \"Newlands, Cape Town\",\n        completedYear: \"2018\",\n        category: \"landscaping\",\n        duration: \"6 weeks\",\n        clientName: \"Private Estate Owner\",\n        projectScope: [\"Garden design\", \"Paving installation\", \"Retaining walls\", \"Drainage systems\"],\n        challenges: \"Managing water drainage across sloped terrain while maintaining aesthetic appeal\",\n        solution: \"Designed integrated drainage system with terraced landscaping and decorative paving\",\n        materials: [\"Paving stones\", \"Drainage pipes\", \"Retaining wall blocks\", \"Landscape fabric\"],\n        teamSize: \"4 landscaping specialists\"\n      },\n      {\n        title: \"Monte Vista Project\",\n        description: \"Expert plastering services in Monte Vista residential area\",\n        detailedDescription: \"Interior and exterior plastering renovation for a Monte Vista family home, including repair work, surface preparation, and premium finishing. The project involved matching existing textures while upgrading to modern standards.\",\n        imageUrl: \"https://www.kanguyabuilders.com/public/upload/projects/fxQMLfE8syNeNX6EVBF5mWXncWFnpu.png\",\n        additionalImages: [\"https://www.kanguyabuilders.com/public/upload/projects/fxQMLfE8syNeNX6EVBF5mWXncWFnpu.png\"],\n        location: \"Monte Vista, Cape Town\",\n        completedYear: \"2016\",\n        category: \"plastering\",\n        duration: \"3 weeks\",\n        clientName: \"Family Residence\",\n        projectScope: [\"Interior walls\", \"Exterior facades\", \"Crack repairs\", \"Surface texturing\"],\n        challenges: \"Matching existing plaster textures while improving insulation and durability\",\n        solution: \"Applied modern plastering techniques with traditional aesthetic finishes\",\n        materials: [\"Cement plaster\", \"Acrylic render\", \"Crack filler\", \"Textured coating\"],\n        teamSize: \"3 plasterers\"\n      },\n      {\n        title: \"Southern Wind Shipyard\",\n        description: \"Specialized plumbing work for marine facility\",\n        detailedDescription: \"Complex marine facility plumbing installation at Southern Wind Shipyard, involving specialized corrosion-resistant piping, marine-grade fixtures, and industrial-strength water systems designed for harsh maritime environments.\",\n        imageUrl: \"https://www.kanguyabuilders.com/public/upload/projects/z5EErCOLSRjgBvYaB4BNx6z7fDy6yz.png\",\n        additionalImages: [\"https://www.kanguyabuilders.com/public/upload/projects/z5EErCOLSRjgBvYaB4BNx6z7fDy6yz.png\"],\n        location: \"Cape Town\",\n        completedYear: \"2022\",\n        category: \"plumbing\",\n        duration: \"5 weeks\",\n        clientName: \"Southern Wind Shipyard\",\n        projectScope: [\"Marine plumbing systems\", \"Corrosion-resistant piping\", \"Industrial fixtures\", \"Water management\"],\n        challenges: \"Installing plumbing systems that can withstand saltwater corrosion and extreme conditions\",\n        solution: \"Utilized marine-grade stainless steel and specialized coatings designed for shipyard environments\",\n        materials: [\"Stainless steel pipes\", \"Marine fixtures\", \"Corrosion inhibitors\", \"Industrial valves\"],\n        teamSize: \"4 marine plumbers\"\n      },\n      {\n        title: \"Athlone Cape Town Project\",\n        description: \"Professional brickwork construction in Athlone\",\n        detailedDescription: \"Community housing project in Athlone featuring durable brickwork construction, structural walls, and architectural elements. This project emphasized both functionality and aesthetic appeal for residential development.\",\n        imageUrl: \"https://www.kanguyabuilders.com/public/upload/projects/6oBQooNu52DjCv5UOqUwH1ldeDSfgc.png\",\n        additionalImages: [\"https://www.kanguyabuilders.com/public/upload/projects/6oBQooNu52DjCv5UOqUwH1ldeDSfgc.png\"],\n        location: \"Athlone, Cape Town\",\n        completedYear: \"2018\",\n        category: \"brickwork\",\n        duration: \"10 weeks\",\n        clientName: \"Housing Development Company\",\n        projectScope: [\"Structural walls\", \"Load-bearing construction\", \"Architectural features\", \"Quality finishing\"],\n        challenges: \"Building cost-effective yet durable structures for community housing\",\n        solution: \"Used high-quality materials with efficient construction methods to ensure longevity\",\n        materials: [\"Clay bricks\", \"Cement mortar\", \"Steel reinforcement\", \"Damp-proof course\"],\n        teamSize: \"8 construction specialists\"\n      },\n      {\n        title: \"16 Holloway Elsiesriver Project\",\n        description: \"Complete roof renovation and double-story construction\", \n        detailedDescription: \"Major renovation project involving roof removal and replacement, construction of wooden deck with 70mm concrete slab, double-story block walls, interior partitioning, and construction of concrete staircase. This comprehensive project showcased our expertise in structural work and renovation.\",\n        imageUrl: \"/project-images/WhatsApp Image 2025-08-26 at 20.10.23 (2)_1756736427413.jpeg\",\n        additionalImages: [\"/project-images/WhatsApp Image 2025-08-26 at 20.10.23 (2)_1756736427413.jpeg\"],\n        location: \"Elsiesriver, Cape Town\",\n        completedYear: \"2024\",\n        category: \"construction\",\n        duration: \"6 weeks\",\n        clientName: \"Residential Property Owner\",\n        projectScope: [\"Roof removal and replacement\", \"Wooden deck construction\", \"70mm concrete slab\", \"Double-story block walls\", \"Interior partitioning\", \"Concrete staircase\"],\n        challenges: \"Coordinating multiple construction phases while maintaining structural integrity\",\n        solution: \"Systematic approach with careful sequencing of demolition, construction, and finishing phases\",\n        materials: [\"Wooden deck materials\", \"Concrete\", \"Building blocks\", \"Shutterply boards\", \"Roofing materials\"],\n        teamSize: \"6 construction specialists\"\n      },\n      {\n        title: \"Athlone Painting and Renovation Project\",\n        description: \"Comprehensive painting, fencing, and interior improvements\",\n        detailedDescription: \"Multi-faceted project including roof and wall painting, brick fence construction with gates, wooden staircase installation, laminated flooring, and bathroom ceiling work. This project demonstrated our versatility across multiple trades.\",\n        imageUrl: \"/project-images/WhatsApp Image 2025-08-26 at 20.10.23 (1)_1756736427414.jpeg\",\n        additionalImages: [\"/project-images/WhatsApp Image 2025-08-26 at 20.10.23 (1)_1756736427414.jpeg\"],\n        location: \"Athlone, Cape Town\",\n        completedYear: \"2024\",\n        category: \"maintenance\",\n        duration: \"4 weeks\",\n        clientName: \"Residential Homeowner\",\n        projectScope: [\"Roof and wall painting\", \"Brick fence construction\", \"Double gate installation\", \"Wooden staircase\", \"Laminated flooring\", \"Bathroom ceiling work\"],\n        challenges: \"Coordinating multiple trades and ensuring color consistency across all painted surfaces\",\n        solution: \"Professional surface preparation and premium paint systems for lasting finish\",\n        materials: [\"Paint and primers\", \"Bricks and mortar\", \"Wooden gates\", \"Laminated flooring\", \"Staircase materials\"],\n        teamSize: \"5 multi-trade specialists\"\n      },\n      {\n        title: \"Lusaka West Zambia Project\",\n        description: \"Complete four-bedroom house construction from foundation to finish\",\n        detailedDescription: \"Full-scale residential construction project involving custom design and complete build of a four-bedroom house. This international project included all trades from foundation work through to final painting and plumbing installation.\",\n        imageUrl: \"/project-images/WhatsApp Image 2025-08-26 at 20.10.23_1756736427414.jpeg\",\n        additionalImages: [\"/project-images/WhatsApp Image 2025-08-26 at 20.10.23_1756736427414.jpeg\"],\n        location: \"Lusaka West, Zambia\",\n        completedYear: \"2024\",\n        category: \"construction\",\n        duration: \"16 weeks\",\n        clientName: \"Private International Client\",\n        projectScope: [\"House design\", \"Foundation to roof construction\", \"Interior and exterior plastering\", \"Concrete slab flooring\", \"Tiling work\", \"Roofing and ceiling\", \"Doors and windows\", \"Interior and exterior painting\", \"Complete plumbing\"],\n        challenges: \"Managing international project logistics and local material sourcing\",\n        solution: \"Established local supply chains and implemented rigorous quality control processes\",\n        materials: [\"Foundation materials\", \"Building blocks\", \"Roofing materials\", \"Tiles\", \"Plumbing fixtures\", \"Paint systems\"],\n        teamSize: \"12 construction professionals\"\n      },\n      {\n        title: \"Monte Vista Cape Town Project\",\n        description: \"Front porch decoration and exterior plastering work\",\n        detailedDescription: \"Decorative plastering project focusing on front porch enhancement, exterior wall plastering for upper story, window surrounds, and floor tiling. This project enhanced the property's curb appeal and weather protection.\",\n        imageUrl: \"/project-images/WhatsApp Image 2025-08-26 at 20.10.22 (1)_1756736427415.jpeg\",\n        additionalImages: [\"/project-images/WhatsApp Image 2025-08-26 at 20.10.22 (1)_1756736427415.jpeg\"],\n        location: \"Monte Vista, Cape Town\",\n        completedYear: \"2024\",\n        category: \"plastering\",\n        duration: \"2 weeks\",\n        clientName: \"Residential Property Owner\",\n        projectScope: [\"Front porch decoration\", \"Upper story exterior plastering\", \"Window surround plastering\", \"Floor tiling\"],\n        challenges: \"Achieving decorative finish while ensuring weather resistance\",\n        solution: \"Applied specialized exterior plaster systems with decorative texturing techniques\",\n        materials: [\"Exterior plaster\", \"Decorative additives\", \"Waterproof sealers\", \"Floor tiles\"],\n        teamSize: \"3 plasterers and tilers\"\n      },\n      {\n        title: \"Lansdowne Cape Town Project\", \n        description: \"Comprehensive paving work for driveway and house surrounds\",\n        detailedDescription: \"Professional paving installation project covering driveway construction and paving around the entire house perimeter. This project provided durable and attractive hardscaping solutions for the property.\",\n        imageUrl: \"/project-images/WhatsApp Image 2025-08-26 at 20.10.22_1756736427417.jpeg\",\n        additionalImages: [\"/project-images/WhatsApp Image 2025-08-26 at 20.10.22_1756736427417.jpeg\"],\n        location: \"Lansdowne, Cape Town\",\n        completedYear: \"2024\",\n        category: \"paving\",\n        duration: \"3 weeks\",\n        clientName: \"Residential Homeowner\",\n        projectScope: [\"Driveway paving\", \"House perimeter paving\", \"Drainage integration\", \"Edging and finishing\"],\n        challenges: \"Ensuring proper drainage while creating attractive paving patterns\",\n        solution: \"Implemented sloped paving design with integrated drainage channels\",\n        materials: [\"Concrete pavers\", \"Sand bedding\", \"Edge restraints\", \"Drainage materials\"],\n        teamSize: \"4 paving specialists\"\n      },\n      {\n        title: \"14 Fairdale Gardens Cape Town Project\",\n        description: \"Modern wooden floor installation covering 35 square meters\",\n        detailedDescription: \"Precision flooring renovation project involving removal of old laminated flooring and installation of modern wooden flooring in the lounge area. This project required careful surface preparation and expert installation techniques.\",\n        imageUrl: \"/project-images/WhatsApp Image 2025-08-26 at 20.10.21 (1)_1756736427418.jpeg\",\n        additionalImages: [\"/project-images/WhatsApp Image 2025-08-26 at 20.10.21 (1)_1756736427418.jpeg\"],\n        location: \"Fairdale Gardens, Cape Town\",\n        completedYear: \"2024\",\n        category: \"flooring\",\n        duration: \"1 week\",\n        clientName: \"Residential Property Owner\",\n        projectScope: [\"Old floor removal\", \"Surface preparation\", \"Modern wooden floor installation\", \"Finishing and trim work\"],\n        challenges: \"Achieving level surface and perfect alignment across 35 square meters\",\n        solution: \"Professional surface leveling and precision installation with premium materials\",\n        materials: [\"Modern wooden flooring\", \"Underlay\", \"Adhesives\", \"Trim and molding\"],\n        teamSize: \"2 flooring specialists\"\n      },\n      {\n        title: \"4 Glengriff Road Sea Point Project\",\n        description: \"Multi-trade services including plumbing, carpentry, and painting\",\n        detailedDescription: \"Comprehensive maintenance and improvement project combining plumbing repairs and installations, custom carpentry work, and professional painting services. This project showcased our multi-trade capabilities in prestigious Sea Point location.\",\n        imageUrl: \"/project-images/WhatsApp Image 2025-08-26 at 20.10.21_1756736427419.jpeg\",\n        additionalImages: [\"/project-images/WhatsApp Image 2025-08-26 at 20.10.21_1756736427419.jpeg\"],\n        location: \"Sea Point, Cape Town\",\n        completedYear: \"2024\",\n        category: \"maintenance\",\n        duration: \"2 weeks\",\n        clientName: \"Residential Property Owner\",\n        projectScope: [\"Plumbing repairs and installations\", \"Custom carpentry work\", \"Interior and exterior painting\"],\n        challenges: \"Coordinating multiple trades in occupied residential property\",\n        solution: \"Phased approach with minimal disruption and high-quality finishes across all trades\",\n        materials: [\"Plumbing fixtures\", \"Carpentry materials\", \"Paint systems\", \"Hardware\"],\n        teamSize: \"4 multi-trade specialists\"\n      },\n      {\n        title: \"Gugulethu Cape Town Project\",\n        description: \"Community housing development with modern construction techniques\",\n        detailedDescription: \"Large-scale community housing project in Gugulethu featuring modern construction methods, efficient space utilization, and durable building materials. This project emphasized affordability without compromising on quality and structural integrity.\",\n        imageUrl: \"/project-images/WhatsApp Image 2025-08-26 at 20.10.15 (1)_1756736427420.jpeg\",\n        additionalImages: [\"/project-images/WhatsApp Image 2025-08-26 at 20.10.15 (1)_1756736427420.jpeg\"],\n        location: \"Gugulethu, Cape Town\",\n        completedYear: \"2023\",\n        category: \"construction\",\n        duration: \"12 weeks\",\n        clientName: \"Community Development Corporation\",\n        projectScope: [\"Foundation work\", \"Structural walls\", \"Roofing systems\", \"Interior finishing\", \"Exterior cladding\"],\n        challenges: \"Balancing cost efficiency with quality construction for community housing\",\n        solution: \"Implemented innovative construction techniques and bulk material sourcing\",\n        materials: [\"Cost-effective building blocks\", \"Steel reinforcement\", \"Roofing sheets\", \"Interior fixtures\"],\n        teamSize: \"10 construction specialists\"\n      },\n      {\n        title: \"Mitchells Plain Renovation Project\",\n        description: \"Complete home renovation with modern upgrades\",\n        detailedDescription: \"Comprehensive home renovation project in Mitchells Plain including structural improvements, modern electrical installations, plumbing upgrades, and contemporary interior design. This project transformed an older property into a modern family home.\",\n        imageUrl: \"/project-images/WhatsApp Image 2025-08-26 at 20.10.15_1756736427420.jpeg\",\n        additionalImages: [\"/project-images/WhatsApp Image 2025-08-26 at 20.10.15_1756736427420.jpeg\"],\n        location: \"Mitchells Plain, Cape Town\",\n        completedYear: \"2024\",\n        category: \"maintenance\",\n        duration: \"8 weeks\",\n        clientName: \"Family Homeowner\",\n        projectScope: [\"Structural upgrades\", \"Electrical rewiring\", \"Plumbing modernization\", \"Interior renovation\", \"Exterior improvements\"],\n        challenges: \"Upgrading older infrastructure while maintaining structural integrity\",\n        solution: \"Phased renovation approach with systematic infrastructure upgrades\",\n        materials: [\"Modern electrical components\", \"Updated plumbing fixtures\", \"Interior finishes\", \"Structural materials\"],\n        teamSize: \"6 renovation specialists\"\n      },\n      {\n        title: \"Hout Bay Coastal Project\",\n        description: \"Specialized coastal construction with weather-resistant materials\",\n        detailedDescription: \"Challenging coastal construction project in Hout Bay requiring specialized materials and techniques to withstand harsh ocean conditions. This project showcased our expertise in coastal building requirements and weather-resistant construction.\",\n        imageUrl: \"/project-images/WhatsApp Image 2025-08-26 at 20.10.13_1756736427421.jpeg\",\n        additionalImages: [\"/project-images/WhatsApp Image 2025-08-26 at 20.10.13_1756736427421.jpeg\"],\n        location: \"Hout Bay, Cape Town\",\n        completedYear: \"2023\",\n        category: \"construction\",\n        duration: \"10 weeks\",\n        clientName: \"Coastal Property Developer\",\n        projectScope: [\"Weather-resistant construction\", \"Coastal foundation work\", \"Specialized materials installation\", \"Corrosion protection\"],\n        challenges: \"Building in harsh coastal environment with salt air and high winds\",\n        solution: \"Used marine-grade materials and specialized construction techniques\",\n        materials: [\"Corrosion-resistant steel\", \"Weather-resistant concrete\", \"Marine-grade fasteners\", \"Protective coatings\"],\n        teamSize: \"7 coastal construction specialists\"\n      },\n      {\n        title: \"Observatory Student Housing Project\",\n        description: \"Modern student accommodation with efficient space design\",\n        detailedDescription: \"Contemporary student housing development in Observatory featuring efficient space utilization, modern amenities, and sustainable construction practices. This project provided quality accommodation for students while maximizing space efficiency.\",\n        imageUrl: \"/project-images/WhatsApp Image 2025-08-26 at 20.10.12 (1)_1756736427422.jpeg\",\n        additionalImages: [\"/project-images/WhatsApp Image 2025-08-26 at 20.10.12 (1)_1756736427422.jpeg\"],\n        location: \"Observatory, Cape Town\",\n        completedYear: \"2024\",\n        category: \"construction\",\n        duration: \"14 weeks\",\n        clientName: \"Property Investment Company\",\n        projectScope: [\"Multi-unit construction\", \"Efficient space design\", \"Modern amenities installation\", \"Common area development\"],\n        challenges: \"Maximizing accommodation units while maintaining quality and comfort\",\n        solution: \"Innovative space design with modular construction techniques\",\n        materials: [\"Lightweight building materials\", \"Efficient fixtures\", \"Space-saving solutions\", \"Modern finishes\"],\n        teamSize: \"9 construction professionals\"\n      },\n      {\n        title: \"Woodstock Industrial Renovation\",\n        description: \"Industrial facility conversion to modern workspace\",\n        detailedDescription: \"Major industrial renovation project in Woodstock converting old warehouse space into modern commercial workspace. This project required specialized knowledge of industrial construction, safety requirements, and modern workspace design.\",\n        imageUrl: \"/project-images/WhatsApp Image 2025-08-26 at 20.10.12_1756736427422.jpeg\",\n        additionalImages: [\"/project-images/WhatsApp Image 2025-08-26 at 20.10.12_1756736427422.jpeg\"],\n        location: \"Woodstock, Cape Town\",\n        completedYear: \"2023\",\n        category: \"construction\",\n        duration: \"16 weeks\",\n        clientName: \"Commercial Development Company\",\n        projectScope: [\"Industrial conversion\", \"Structural modifications\", \"Modern workspace design\", \"Safety compliance upgrades\"],\n        challenges: \"Converting industrial space while meeting modern safety and accessibility standards\",\n        solution: \"Comprehensive structural assessment and systematic modernization approach\",\n        materials: [\"Industrial-grade materials\", \"Safety compliance fixtures\", \"Modern workspace components\", \"Accessibility features\"],\n        teamSize: \"12 industrial construction specialists\"\n      },\n      {\n        title: \"Khayelitsha Community Center\",\n        description: \"Community facility construction serving local residents\",\n        detailedDescription: \"Important community infrastructure project in Khayelitsha building a multi-purpose community center. This project emphasized durability, accessibility, and creating a space that serves the diverse needs of the local community.\",\n        imageUrl: \"/project-images/WhatsApp Image 2025-08-26 at 20.10.10 (2)_1756736427423.jpeg\",\n        additionalImages: [\"/project-images/WhatsApp Image 2025-08-26 at 20.10.10 (2)_1756736427423.jpeg\"],\n        location: \"Khayelitsha, Cape Town\",\n        completedYear: \"2024\",\n        category: \"construction\",\n        duration: \"20 weeks\",\n        clientName: \"Community Development Trust\",\n        projectScope: [\"Community facility construction\", \"Multi-purpose space design\", \"Accessibility features\", \"Durable construction methods\"],\n        challenges: \"Building cost-effective community infrastructure with maximum functionality\",\n        solution: \"Community-focused design with emphasis on durability and versatility\",\n        materials: [\"Heavy-duty building materials\", \"Community-grade fixtures\", \"Accessibility components\", \"Durable finishes\"],\n        teamSize: \"15 community construction specialists\"\n      }\n    ];\n\n    sampleProjects.forEach(project => {\n      this.createProject(project);\n    });\n\n\n\n    // Sample reviews from new system\n    const sampleReviews: InsertReview[] = [\n      {\n        customerName: \"Peter van der Merwe\",\n        customerEmail: \"peter.vdmerwe@email.com\",\n        customerPhone: \"+27 21 555 0123\",\n        rating: \"5\",\n        title: \"Outstanding Brickwork Project\",\n        review: \"Kanguya Builders completed our brickwork project in Bellville with exceptional quality. The structural walls are solid and the architectural features look fantastic. Professional team that delivered on all promises.\",\n        serviceUsed: \"brickwork\",\n        projectLocation: \"Bellville, Cape Town\",\n        recommendToOthers: \"yes\"\n      },\n      {\n        customerName: \"Jennifer Adams\",\n        customerEmail: \"j.adams@email.com\",\n        customerPhone: \"+27 79 555 0234\",\n        rating: \"5\", \n        title: \"Excellent Plumbing Services\",\n        review: \"The marine facility plumbing work was complex but Kanguya Builders handled it perfectly. Their expertise with corrosion-resistant materials and industrial systems is impressive. Highly recommended.\",\n        serviceUsed: \"plumbing\",\n        projectLocation: \"Cape Town Waterfront\",\n        recommendToOthers: \"yes\"\n      },\n      {\n        customerName: \"Robert Johnson\",\n        customerEmail: \"robert.johnson@email.com\",\n        customerPhone: \"+27 72 555 0345\",\n        rating: \"4\",\n        title: \"Great Carpentry Work\",\n        review: \"Solid carpentry services with attention to detail. The team completed our custom woodwork professionally and on schedule. Good communication throughout the project.\",\n        serviceUsed: \"carpentry\",\n        projectLocation: \"Observatory, Cape Town\",\n        recommendToOthers: \"yes\"\n      }\n    ];\n\n    sampleReviews.forEach(review => {\n      this.createReview(review);\n    });\n  }\n\n  async getProjects(): Promise<Project[]> {\n    return Array.from(this.projects.values());\n  }\n\n  async getProject(id: string): Promise<Project | undefined> {\n    return this.projects.get(id);\n  }\n\n  async createProject(insertProject: InsertProject): Promise<Project> {\n    const id = randomUUID();\n    const project: Project = { \n      ...insertProject, \n      id,\n      detailedDescription: insertProject.detailedDescription ?? null,\n      additionalImages: insertProject.additionalImages ?? null,\n      duration: insertProject.duration ?? null,\n      clientName: insertProject.clientName ?? null,\n      projectScope: insertProject.projectScope ?? null,\n      challenges: insertProject.challenges ?? null,\n      solution: insertProject.solution ?? null,\n      materials: insertProject.materials ?? null,\n      teamSize: insertProject.teamSize ?? null\n    };\n    this.projects.set(id, project);\n    return project;\n  }\n\n\n\n  async getReviews(): Promise<Review[]> {\n    return Array.from(this.reviews.values());\n  }\n\n  async getApprovedReviews(): Promise<Review[]> {\n    return Array.from(this.reviews.values()).filter(review => review.isApproved === \"approved\");\n  }\n\n  async createReview(insertReview: InsertReview): Promise<Review> {\n    const id = randomUUID();\n    const review: Review = { \n      ...insertReview, \n      id,\n      customerPhone: insertReview.customerPhone ?? null,\n      projectLocation: insertReview.projectLocation ?? null,\n      recommendToOthers: insertReview.recommendToOthers ?? \"yes\",\n      isApproved: \"pending\",\n      createdAt: new Date()\n    };\n    this.reviews.set(id, review);\n    return review;\n  }\n\n  async approveReview(id: string): Promise<Review | undefined> {\n    const review = this.reviews.get(id);\n    if (review) {\n      review.isApproved = \"approved\";\n      this.reviews.set(id, review);\n      return review;\n    }\n    return undefined;\n  }\n\n  async createQuoteRequest(insertRequest: InsertQuoteRequest): Promise<QuoteRequest> {\n    const id = randomUUID();\n    const request: QuoteRequest = { \n      ...insertRequest,\n      budget: insertRequest.budget || null,\n      id, \n      createdAt: new Date() \n    };\n    this.quoteRequests.set(id, request);\n    return request;\n  }\n\n  async getQuoteRequests(): Promise<QuoteRequest[]> {\n    return Array.from(this.quoteRequests.values());\n  }\n\n  async createContactMessage(insertMessage: InsertContactMessage): Promise<ContactMessage> {\n    const id = randomUUID();\n    const message: ContactMessage = { \n      ...insertMessage, \n      id, \n      createdAt: new Date() \n    };\n    this.contactMessages.set(id, message);\n    return message;\n  }\n\n  async getContactMessages(): Promise<ContactMessage[]> {\n    return Array.from(this.contactMessages.values());\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":34813},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, timestamp } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const projects = pgTable(\"projects\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  description: text(\"description\").notNull(),\n  detailedDescription: text(\"detailed_description\"),\n  imageUrl: text(\"image_url\").notNull(),\n  additionalImages: text(\"additional_images\").array(),\n  location: text(\"location\").notNull(),\n  completedYear: text(\"completed_year\").notNull(),\n  category: text(\"category\").notNull(),\n  duration: text(\"duration\"),\n  clientName: text(\"client_name\"),\n  projectScope: text(\"project_scope\").array(),\n  challenges: text(\"challenges\"),\n  solution: text(\"solution\"),\n  materials: text(\"materials\").array(),\n  teamSize: text(\"team_size\"),\n});\n\n\n\nexport const reviews = pgTable(\"reviews\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  customerName: text(\"customer_name\").notNull(),\n  customerEmail: text(\"customer_email\").notNull(),\n  customerPhone: text(\"customer_phone\"),\n  rating: text(\"rating\").notNull(),\n  title: text(\"title\").notNull(),\n  review: text(\"review\").notNull(),\n  serviceUsed: text(\"service_used\").notNull(),\n  projectLocation: text(\"project_location\"),\n  recommendToOthers: text(\"recommend_to_others\").notNull().default(\"yes\"),\n  isApproved: text(\"is_approved\").notNull().default(\"pending\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const quoteRequests = pgTable(\"quote_requests\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  fullName: text(\"full_name\").notNull(),\n  phone: text(\"phone\").notNull(),\n  email: text(\"email\").notNull(),\n  projectType: text(\"project_type\").notNull(),\n  budget: text(\"budget\"),\n  location: text(\"location\").notNull(),\n  description: text(\"description\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const contactMessages = pgTable(\"contact_messages\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  email: text(\"email\").notNull(),\n  subject: text(\"subject\").notNull(),\n  message: text(\"message\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const insertProjectSchema = createInsertSchema(projects).omit({\n  id: true,\n});\n\n\n\nexport const insertQuoteRequestSchema = createInsertSchema(quoteRequests).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertContactMessageSchema = createInsertSchema(contactMessages).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertReviewSchema = createInsertSchema(reviews).omit({\n  id: true,\n  createdAt: true,\n  isApproved: true,\n});\n\nexport type Project = typeof projects.$inferSelect;\nexport type InsertProject = z.infer<typeof insertProjectSchema>;\nexport type QuoteRequest = typeof quoteRequests.$inferSelect;\nexport type InsertQuoteRequest = z.infer<typeof insertQuoteRequestSchema>;\nexport type ContactMessage = typeof contactMessages.$inferSelect;\nexport type InsertContactMessage = z.infer<typeof insertContactMessageSchema>;\nexport type Review = typeof reviews.$inferSelect;\nexport type InsertReview = z.infer<typeof insertReviewSchema>;\n","size_bytes":3291},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport \"./i18n\";\nimport Home from \"@/pages/home\";\nimport About from \"@/pages/about\";\nimport Services from \"@/pages/services\";\nimport Projects from \"@/pages/projects\";\nimport Contact from \"@/pages/contact\";\nimport Quote from \"@/pages/quote\";\nimport CostEstimator from \"@/pages/cost-estimator\";\nimport { ReviewsPage } from \"@/pages/reviews\";\nimport { GalleryPage } from \"@/pages/gallery\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/services\" component={Services} />\n      <Route path=\"/projects\" component={Projects} />\n      <Route path=\"/contact\" component={Contact} />\n      <Route path=\"/quote\" component={Quote} />\n      <Route path=\"/cost-estimator\" component={CostEstimator} />\n      <Route path=\"/reviews\" component={ReviewsPage} />\n      <Route path=\"/gallery\" component={GalleryPage} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1486},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0, 0%, 100%);\n  --foreground: hsl(215, 100%, 15%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(215, 100%, 15%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(215, 100%, 15%);\n  --primary: hsl(215, 100%, 25%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(215, 30%, 95%);\n  --secondary-foreground: hsl(215, 100%, 15%);\n  --muted: hsl(215, 30%, 95%);\n  --muted-foreground: hsl(215, 20%, 45%);\n  --accent: hsl(215, 30%, 90%);\n  --accent-foreground: hsl(215, 100%, 15%);\n  --destructive: hsl(0, 62.8%, 50%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(215, 30%, 85%);\n  --input: hsl(215, 30%, 95%);\n  --ring: hsl(215, 100%, 25%);\n  --chart-1: hsl(18, 100%, 60%);\n  --chart-2: hsl(217, 91%, 60%);\n  --chart-3: hsl(142, 76%, 36%);\n  --chart-4: hsl(47, 93%, 57%);\n  --chart-5: hsl(340, 75%, 51%);\n  --sidebar: hsl(215, 28%, 17%);\n  --sidebar-foreground: hsl(210, 40%, 98%);\n  --sidebar-primary: hsl(18, 100%, 60%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(215, 28%, 25%);\n  --sidebar-accent-foreground: hsl(210, 40%, 98%);\n  --sidebar-border: hsl(215, 28%, 25%);\n  --sidebar-ring: hsl(18, 100%, 60%);\n  --font-sans: 'Inter', sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: 0.5rem;\n  \n  /* Custom Kanguya Builders Colors - Professional Navy Theme */\n  --navy-primary: hsl(215, 100%, 25%);\n  --navy-secondary: hsl(215, 95%, 35%);\n  --navy-dark: hsl(215, 100%, 15%);\n  --navy-light: hsl(215, 50%, 70%);\n  --gray-neutral: hsl(215, 20.2%, 65.1%);\n  --gray-light: hsl(215, 28%, 22%);\n}\n\n.dark {\n  --background: hsl(222.2, 84%, 4.9%);\n  --foreground: hsl(210, 40%, 98%);\n  --card: hsl(222.2, 84%, 4.9%);\n  --card-foreground: hsl(210, 40%, 98%);\n  --popover: hsl(222.2, 84%, 4.9%);\n  --popover-foreground: hsl(210, 40%, 98%);\n  --primary: hsl(18, 100%, 60%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(217, 91%, 60%);\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --muted: hsl(217.2, 32.6%, 17.5%);\n  --muted-foreground: hsl(215, 20.2%, 65.1%);\n  --accent: hsl(217.2, 32.6%, 17.5%);\n  --accent-foreground: hsl(210, 40%, 98%);\n  --destructive: hsl(0, 62.8%, 30.6%);\n  --destructive-foreground: hsl(210, 40%, 98%);\n  --border: hsl(217.2, 32.6%, 17.5%);\n  --input: hsl(217.2, 32.6%, 17.5%);\n  --ring: hsl(18, 100%, 60%);\n  --chart-1: hsl(18, 100%, 60%);\n  --chart-2: hsl(217, 91%, 60%);\n  --chart-3: hsl(142, 76%, 36%);\n  --chart-4: hsl(47, 93%, 57%);\n  --chart-5: hsl(340, 75%, 51%);\n  --sidebar: hsl(222.2, 84%, 4.9%);\n  --sidebar-foreground: hsl(210, 40%, 98%);\n  --sidebar-primary: hsl(18, 100%, 60%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(217.2, 32.6%, 17.5%);\n  --sidebar-accent-foreground: hsl(210, 40%, 98%);\n  --sidebar-border: hsl(217.2, 32.6%, 17.5%);\n  --sidebar-ring: hsl(18, 100%, 60%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n    font-family: 'Inter', sans-serif;\n  }\n}\n\n@layer utilities {\n  .orange-primary {\n    color: #FF6B35;\n  }\n  \n  .orange-secondary {\n    color: #FD7F41;\n  }\n  \n  .blue-primary {\n    color: #1B2951;\n  }\n  \n  .blue-secondary {\n    color: #2D3A5C;\n  }\n  \n  .gray-neutral {\n    color: #9CA3AF;\n  }\n  \n  .bg-orange-primary {\n    background-color: #FF6B35;\n  }\n  \n  .bg-orange-secondary {\n    background-color: #FD7F41;\n  }\n  \n  .bg-blue-primary {\n    background-color: #1B2951;\n  }\n  \n  .bg-blue-secondary {\n    background-color: #2D3A5C;\n  }\n  \n  .bg-gray-light {\n    background-color: #2D3A5C;\n  }\n  \n  .border-orange-primary {\n    border-color: #FF6B35;\n  }\n  \n  .border-blue-primary {\n    border-color: #1B2951;\n  }\n  \n  .text-orange-primary {\n    color: #FF6B35;\n  }\n  \n  .text-orange-secondary {\n    color: #FD7F41;\n  }\n  \n  .text-blue-primary {\n    color: #1B2951;\n  }\n  \n  .text-blue-secondary {\n    color: #3B82F6;\n  }\n  \n  .text-gray-neutral {\n    color: #9CA3AF;\n  }\n  \n  .hover\\:bg-orange-secondary:hover {\n    background-color: #FD7F41;\n  }\n  \n  .hover\\:bg-blue-secondary:hover {\n    background-color: #3B82F6;\n  }\n  \n  .hover\\:text-orange-primary:hover {\n    color: #FF6B35;\n  }\n  \n  .hover\\:text-blue-secondary:hover {\n    color: #3B82F6;\n  }\n  \n  .focus\\:ring-orange-primary:focus {\n    --tw-ring-color: #FF6B35;\n  }\n}\n","size_bytes":4512},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/about.tsx":{"content":"import { useTranslation } from \"react-i18next\";\n\nexport default function About() {\n  const { t } = useTranslation();\n  \n  return (\n    <section id=\"about\" className=\"py-20 bg-gray-light\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n          <div>\n            <img \n              src=\"/project-images/WhatsApp Image 2025-09-02 at 17.48.21_1757324896683.jpeg\" \n              alt=\"Kanguya Builders team and construction work\" \n              className=\"rounded-xl shadow-lg w-full\"\n            />\n          </div>\n          \n          <div>\n            <h3 className=\"text-4xl font-bold text-gray-900 mb-6\">{t('about.title')}</h3>\n            <p className=\"text-lg text-gray-neutral mb-6 leading-relaxed\">\n              {t('about.description')}\n            </p>\n\n            <div className=\"mb-8\">\n              <div className=\"bg-white p-6 rounded-lg shadow-md mb-6\">\n                <h4 className=\"text-lg font-semibold text-gray-900 mb-2\">{t('about.vision')}</h4>\n                <p className=\"text-gray-neutral text-sm\">\n                  {t('about.visionText')}\n                </p>\n              </div>\n              \n              <div className=\"bg-white p-6 rounded-lg shadow-md\">\n                <h4 className=\"text-lg font-semibold text-gray-900 mb-4\">{t('about.philosophy')}</h4>\n                <div className=\"grid md:grid-cols-2 gap-3\">\n                  <div className=\"flex items-start space-x-2\">\n                    <div className=\"w-2 h-2 bg-orange-primary rounded-full mt-2 flex-shrink-0\"></div>\n                    <p className=\"text-gray-neutral text-sm\">{t('about.philosophyPoints.safety')}</p>\n                  </div>\n                  <div className=\"flex items-start space-x-2\">\n                    <div className=\"w-2 h-2 bg-orange-primary rounded-full mt-2 flex-shrink-0\"></div>\n                    <p className=\"text-gray-neutral text-sm\">{t('about.philosophyPoints.planning')}</p>\n                  </div>\n                  <div className=\"flex items-start space-x-2\">\n                    <div className=\"w-2 h-2 bg-orange-primary rounded-full mt-2 flex-shrink-0\"></div>\n                    <p className=\"text-gray-neutral text-sm\">{t('about.philosophyPoints.communication')}</p>\n                  </div>\n                  <div className=\"flex items-start space-x-2\">\n                    <div className=\"w-2 h-2 bg-orange-primary rounded-full mt-2 flex-shrink-0\"></div>\n                    <p className=\"text-gray-neutral text-sm\">{t('about.philosophyPoints.tracking')}</p>\n                  </div>\n                  <div className=\"flex items-start space-x-2\">\n                    <div className=\"w-2 h-2 bg-orange-primary rounded-full mt-2 flex-shrink-0\"></div>\n                    <p className=\"text-gray-neutral text-sm\">{t('about.philosophyPoints.supervision')}</p>\n                  </div>\n                  <div className=\"flex items-start space-x-2\">\n                    <div className=\"w-2 h-2 bg-orange-primary rounded-full mt-2 flex-shrink-0\"></div>\n                    <p className=\"text-gray-neutral text-sm\">{t('about.philosophyPoints.completion')}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-3 gap-6 text-center\">\n              <div>\n                <div className=\"text-3xl font-bold text-orange-primary mb-1\" data-testid=\"stat-experience\">14+</div>\n                <div className=\"text-gray-neutral text-sm\">{t('about.yearsExperience')}</div>\n              </div>\n              <div>\n                <div className=\"text-3xl font-bold text-orange-primary mb-1\" data-testid=\"stat-projects\">500+</div>\n                <div className=\"text-gray-neutral text-sm\">{t('about.projectsCompleted')}</div>\n              </div>\n              <div>\n                <div className=\"text-3xl font-bold text-orange-primary mb-1\" data-testid=\"stat-satisfaction\">100%</div>\n                <div className=\"text-gray-neutral text-sm\">{t('about.clientSatisfaction')}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4168},"client/src/components/contact.tsx":{"content":"import { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useTranslation } from \"react-i18next\";\nimport { insertContactMessageSchema } from \"@shared/schema\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Phone, Mail, MessageSquare, MapPin } from \"lucide-react\";\nimport { SiWhatsapp, SiFacebook } from \"react-icons/si\";\nimport type { InsertContactMessage } from \"@shared/schema\";\n\nexport default function Contact() {\n  const { t } = useTranslation();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  \n  const form = useForm<InsertContactMessage>({\n    resolver: zodResolver(insertContactMessageSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      subject: \"\",\n      message: \"\",\n    },\n  });\n\n  const submitContactMutation = useMutation({\n    mutationFn: async (data: InsertContactMessage) => {\n      const response = await apiRequest(\"POST\", \"/api/contact-messages\", data);\n      return response.json();\n    },\n    onSuccess: (data) => {\n      toast({\n        title: t('common.success'),\n        description: data.message,\n      });\n      form.reset();\n      queryClient.invalidateQueries({ queryKey: [\"/api/contact-messages\"] });\n    },\n    onError: (error: any) => {\n      toast({\n        title: t('common.error'),\n        description: error.message || t('common.error'),\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: InsertContactMessage) => {\n    submitContactMutation.mutate(data);\n  };\n\n  return (\n    <section id=\"contact\" className=\"py-20 bg-background\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-16\">\n          <h3 className=\"text-4xl font-bold text-foreground mb-4\">{t('contact.title')}</h3>\n          <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n            {t('contact.subtitle')}\n          </p>\n        </div>\n\n        <div className=\"grid lg:grid-cols-3 gap-8\">\n          <div className=\"lg:col-span-1\">\n            <div className=\"space-y-6\">\n              <div className=\"bg-card p-6 rounded-xl border border-border\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"bg-navy-primary text-white p-3 rounded-full mr-4\">\n                    <Phone className=\"h-6 w-6\" />\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-foreground\">{t('contact.phone')}</h4>\n                    <p className=\"text-muted-foreground\">{t('contact.phoneDescription')}</p>\n                  </div>\n                </div>\n                <a \n                  href=\"tel:+27790562847\" \n                  className=\"text-navy-primary hover:text-navy-secondary font-medium\"\n                  data-testid=\"contact-phone\"\n                >\n                  +27 79 056 2847\n                </a>\n              </div>\n\n              <div className=\"bg-card p-6 rounded-xl border border-border\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"bg-green-600 text-white p-3 rounded-full mr-4\">\n                    <SiWhatsapp className=\"h-6 w-6\" />\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-foreground\">{t('contact.whatsapp')}</h4>\n                    <p className=\"text-muted-foreground\">{t('contact.whatsappDescription')}</p>\n                  </div>\n                </div>\n                <a \n                  href=\"https://wa.me/27790562847?text=Hi%20Kanguya%20Builders!%20I%27m%20interested%20in%20your%20construction%20services.\" \n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"text-green-600 hover:text-green-700 font-medium flex items-center\"\n                  data-testid=\"contact-whatsapp\"\n                >\n                  <SiWhatsapp className=\"mr-2 h-4 w-4\" />\n                  WhatsApp\n                </a>\n              </div>\n\n              <div className=\"bg-card p-6 rounded-xl border border-border\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"bg-blue-600 text-white p-3 rounded-full mr-4\">\n                    <SiFacebook className=\"h-6 w-6\" />\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-foreground\">{t('contact.facebook')}</h4>\n                    <p className=\"text-muted-foreground\">{t('contact.facebookDescription')}</p>\n                  </div>\n                </div>\n                <a \n                  href=\"https://www.facebook.com/kanguyabuilders\" \n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"text-blue-600 hover:text-blue-700 font-medium flex items-center\"\n                  data-testid=\"contact-facebook\"\n                >\n                  <SiFacebook className=\"mr-2 h-4 w-4\" />\n                  Kanguya Builders\n                </a>\n              </div>\n\n              <div className=\"bg-card p-6 rounded-xl border border-border\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"bg-navy-primary text-white p-3 rounded-full mr-4\">\n                    <Mail className=\"h-6 w-6\" />\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-foreground\">{t('contact.email')}</h4>\n                    <p className=\"text-muted-foreground\">{t('contact.emailDescription')}</p>\n                  </div>\n                </div>\n                <a \n                  href=\"mailto:info@kanguyabuilders.com\" \n                  className=\"text-navy-primary hover:text-navy-secondary font-medium\"\n                  data-testid=\"contact-email\"\n                >\n                  info@kanguyabuilders.com\n                </a>\n              </div>\n\n              <div className=\"bg-card p-6 rounded-xl border border-border\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"bg-navy-primary text-white p-3 rounded-full mr-4\">\n                    <MapPin className=\"h-6 w-6\" />\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-foreground\">{t('contact.address')}</h4>\n                    <p className=\"text-muted-foreground\">{t('contact.addressDescription')}</p>\n                  </div>\n                </div>\n                <p className=\"text-foreground mb-4\">\n                  21 Church Street, Langa, Cape Town 7455\n                </p>\n                <div className=\"text-sm text-muted-foreground\">\n                  <strong>{t('contact.hours')}:</strong><br />\n                  {t('contact.mondayFriday')}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"lg:col-span-2\">\n            <div className=\"bg-card p-8 rounded-xl border border-border\">\n              <h4 className=\"text-2xl font-bold text-foreground mb-6\">{t('contact.send')}</h4>\n              <Form {...form}>\n                <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                  <div className=\"grid md:grid-cols-2 gap-6\">\n                    <FormField\n                      control={form.control}\n                      name=\"name\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>{t('contact.name')} *</FormLabel>\n                          <FormControl>\n                            <Input {...field} data-testid=\"input-contact-name\" />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <FormField\n                      control={form.control}\n                      name=\"email\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>{t('contact.email')} *</FormLabel>\n                          <FormControl>\n                            <Input type=\"email\" {...field} data-testid=\"input-contact-email\" />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n                  \n                  <FormField\n                    control={form.control}\n                    name=\"subject\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>{t('contact.subject')} *</FormLabel>\n                        <FormControl>\n                          <Input {...field} data-testid=\"input-contact-subject\" />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  \n                  <FormField\n                    control={form.control}\n                    name=\"message\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>{t('contact.message')} *</FormLabel>\n                        <FormControl>\n                          <Textarea \n                            rows={5} \n                            className=\"resize-none\" \n                            {...field} \n                            data-testid=\"textarea-contact-message\"\n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  \n                  <Button \n                    type=\"submit\" \n                    className=\"bg-navy-primary hover:bg-navy-secondary text-white px-8 py-3\"\n                    disabled={submitContactMutation.isPending}\n                    data-testid=\"button-send-message\"\n                  >\n                    {submitContactMutation.isPending ? t('common.loading') : t('contact.send')}\n                  </Button>\n                </form>\n              </Form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":10566},"client/src/components/featured-projects.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Link } from \"wouter\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Button } from \"@/components/ui/button\";\nimport ProjectDetailsModal from \"./project-details-modal\";\nimport type { Project } from \"@shared/schema\";\n\nexport default function FeaturedProjects() {\n  const { data: projects, isLoading } = useQuery<Project[]>({\n    queryKey: [\"/api/projects\"],\n  });\n\n  // Show only first 6 projects on home page\n  const featuredProjects = projects?.slice(0, 6) || [];\n\n  if (isLoading) {\n    return (\n      <section id=\"featured-projects\" className=\"py-20 bg-background\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h3 className=\"text-4xl font-bold text-foreground mb-4\">Featured Projects</h3>\n            <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n              Our commitment to excellence, attention to detail, and unwavering commitment to customer satisfaction sets us apart as the premier choice for all your building and renovation needs.\n            </p>\n          </div>\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {Array.from({ length: 6 }).map((_, index) => (\n              <div key={index} className=\"bg-card rounded-xl border border-border overflow-hidden\">\n                <Skeleton className=\"w-full h-48\" />\n                <div className=\"p-6\">\n                  <Skeleton className=\"h-6 w-3/4 mb-2\" />\n                  <Skeleton className=\"h-4 w-full mb-3\" />\n                  <div className=\"flex items-center justify-between\">\n                    <Skeleton className=\"h-4 w-24\" />\n                    <Skeleton className=\"h-4 w-20\" />\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <section id=\"featured-projects\" className=\"py-20 bg-background\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-16\">\n          <h3 className=\"text-4xl font-bold text-foreground mb-4\">Featured Projects</h3>\n          <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n            Our commitment to excellence, attention to detail, and unwavering commitment to customer satisfaction sets us apart as the premier choice for all your building and renovation needs.\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12\">\n          {featuredProjects.map((project) => (\n            <div \n              key={project.id} \n              className=\"bg-card rounded-xl border border-border overflow-hidden hover:border-orange-primary/50 transition-all\"\n              data-testid={`featured-project-card-${project.id}`}\n            >\n              <img \n                src={project.imageUrl} \n                alt={project.title} \n                className=\"w-full h-48 object-cover\"\n              />\n              <div className=\"p-6\">\n                <h4 className=\"text-lg font-semibold text-foreground mb-2\">{project.title}</h4>\n                <p className=\"text-muted-foreground text-sm mb-3\">{project.description}</p>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-orange-primary font-medium\">\n                    Completed {project.completedYear}\n                  </span>\n                  <ProjectDetailsModal project={project}>\n                    <button \n                      className=\"text-orange-primary hover:text-orange-secondary text-sm font-medium transition-colors\"\n                      data-testid={`featured-project-details-${project.id}`}\n                    >\n                      View Details\n                    </button>\n                  </ProjectDetailsModal>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"text-center\">\n          <Link href=\"/projects\">\n            <Button \n              className=\"bg-orange-primary hover:bg-orange-secondary text-white px-8 py-3 rounded-lg font-medium transition-colors\"\n              data-testid=\"see-more-projects\"\n            >\n              See More Projects\n            </Button>\n          </Link>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":4350},"client/src/components/footer.tsx":{"content":"import { Phone, Mail, MapPin } from \"lucide-react\";\nimport { SiFacebook, SiX, SiInstagram, SiLinkedin, SiWhatsapp } from \"react-icons/si\";\nimport { Link } from \"wouter\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function Footer() {\n  const { t } = useTranslation();\n\n  return (\n    <footer className=\"bg-card border-t border-border py-12\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          <div>\n            <div className=\"flex items-center space-x-3 mb-4\">\n              <img \n                src=\"https://www.kanguyabuilders.com/favicon.jpg\" \n                alt=\"Kanguya Builders Logo\" \n                className=\"h-8 w-8 rounded-full\"\n              />\n              <h5 className=\"text-xl font-bold text-foreground\">Kanguya Builders</h5>\n            </div>\n            <p className=\"text-muted-foreground mb-4\">\n              {t('footer.description')}\n            </p>\n            <div className=\"flex space-x-4\">\n              <a \n                href=\"https://www.facebook.com/Kanguyabuilders\" \n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-muted-foreground hover:text-orange-primary transition-colors\"\n                data-testid=\"social-facebook\"\n              >\n                <SiFacebook className=\"h-5 w-5\" />\n              </a>\n              <a \n                href=\"https://wa.me/27790562847?text=Hi%20Kanguya%20Builders!%20I%27m%20interested%20in%20your%20construction%20services.\" \n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-muted-foreground hover:text-orange-primary transition-colors\"\n                data-testid=\"social-whatsapp\"\n              >\n                <SiWhatsapp className=\"h-5 w-5\" />\n              </a>\n              <a \n                href=\"#\" \n                className=\"text-muted-foreground hover:text-orange-primary transition-colors\"\n                data-testid=\"social-instagram\"\n              >\n                <SiInstagram className=\"h-5 w-5\" />\n              </a>\n              <a \n                href=\"#\" \n                className=\"text-muted-foreground hover:text-orange-primary transition-colors\"\n                data-testid=\"social-linkedin\"\n              >\n                <SiLinkedin className=\"h-5 w-5\" />\n              </a>\n            </div>\n          </div>\n\n          <div>\n            <h5 className=\"text-lg font-semibold mb-4 text-foreground\">{t('footer.topServices')}</h5>\n            <ul className=\"space-y-2 text-muted-foreground\">\n              <li><Link href=\"/services\" className=\"hover:text-orange-primary transition-colors\">{t('services.brickwork')}</Link></li>\n              <li><Link href=\"/services\" className=\"hover:text-orange-primary transition-colors\">{t('services.plumbing')}</Link></li>\n              <li><Link href=\"/services\" className=\"hover:text-orange-primary transition-colors\">{t('services.carpentry')}</Link></li>\n              <li><Link href=\"/services\" className=\"hover:text-orange-primary transition-colors\">{t('services.plastering')}</Link></li>\n              <li><Link href=\"/services\" className=\"hover:text-orange-primary transition-colors\">{t('services.paving')}</Link></li>\n            </ul>\n          </div>\n\n          <div>\n            <h5 className=\"text-lg font-semibold mb-4 text-foreground\">{t('footer.quickLinks')}</h5>\n            <ul className=\"space-y-2 text-muted-foreground\">\n              <li>\n                <Link \n                  href=\"/\" \n                  className=\"hover:text-orange-primary transition-colors\"\n                  data-testid=\"footer-nav-home\"\n                >\n                  {t('nav.home')}\n                </Link>\n              </li>\n              <li>\n                <Link \n                  href=\"/about\" \n                  className=\"hover:text-orange-primary transition-colors\"\n                  data-testid=\"footer-nav-about\"\n                >\n                  {t('footer.links.about')}\n                </Link>\n              </li>\n              <li>\n                <Link \n                  href=\"/projects\" \n                  className=\"hover:text-orange-primary transition-colors\"\n                  data-testid=\"footer-nav-projects\"\n                >\n                  {t('nav.projects')}\n                </Link>\n              </li>\n              <li>\n                <Link \n                  href=\"/services\" \n                  className=\"hover:text-orange-primary transition-colors\"\n                  data-testid=\"footer-nav-services\"\n                >\n                  {t('nav.services')}\n                </Link>\n              </li>\n              <li>\n                <Link \n                  href=\"/cost-estimator\" \n                  className=\"hover:text-orange-primary transition-colors\"\n                  data-testid=\"footer-nav-cost-estimator\"\n                >\n                  {t('nav.costEstimator')}\n                </Link>\n              </li>\n              <li>\n                <Link \n                  href=\"/quote\" \n                  className=\"hover:text-orange-primary transition-colors\"\n                  data-testid=\"footer-nav-quote\"\n                >\n                  {t('nav.getQuote')}\n                </Link>\n              </li>\n              <li>\n                <Link \n                  href=\"/contact\" \n                  className=\"hover:text-orange-primary transition-colors\"\n                  data-testid=\"footer-nav-contact\"\n                >\n                  {t('nav.contact')}\n                </Link>\n              </li>\n            </ul>\n          </div>\n\n          <div>\n            <h5 className=\"text-lg font-semibold mb-4 text-foreground\">{t('footer.contactInfo')}</h5>\n            <div className=\"space-y-3 text-muted-foreground\">\n              <div className=\"flex items-center\">\n                <Phone className=\"mr-3 h-4 w-4 text-orange-primary\" />\n                <a \n                  href=\"tel:+27790562847\" \n                  className=\"hover:text-orange-primary transition-colors\"\n                  data-testid=\"footer-phone\"\n                >\n                  +27 79 056 2847\n                </a>\n              </div>\n              <div className=\"flex items-center\">\n                <Mail className=\"mr-3 h-4 w-4 text-orange-primary\" />\n                <a \n                  href=\"mailto:info@kanguyabuilders.com\" \n                  className=\"hover:text-orange-primary transition-colors\"\n                  data-testid=\"footer-email\"\n                >\n                  info@kanguyabuilders.com\n                </a>\n              </div>\n              <div className=\"flex items-start\">\n                <MapPin className=\"mr-3 h-4 w-4 text-orange-primary mt-1\" />\n                <div>\n                  <div>{t('footer.address.line1')}</div>\n                  <div>{t('footer.address.line2')}</div>\n                  <div className=\"text-xs mt-1\">{t('footer.hours')}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"border-t border-border mt-8 pt-8 text-center text-muted-foreground\">\n          <p>{t('footer.copyright')}</p>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":7268},"client/src/components/header.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Menu, X, Phone } from \"lucide-react\";\nimport { SiWhatsapp } from \"react-icons/si\";\nimport { Link, useLocation } from \"wouter\";\nimport { useTranslation } from \"react-i18next\";\nimport LanguageSelector from \"./language-selector\";\n\nexport default function Header() {\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [location] = useLocation();\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 100);\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  const isActiveLink = (path: string) => {\n    return location === path;\n  };\n\n  return (\n    <header className={`bg-navy-dark/95 backdrop-blur-sm sticky top-0 z-50 transition-all duration-300 border-b ${isScrolled ? \"shadow-xl border-navy-primary/20\" : \"shadow-lg border-navy-primary/10\"}`}>\n      <nav className=\"container mx-auto px-8 py-4\">\n        <div className=\"flex justify-between items-center\">\n          <Link href=\"/\" className=\"flex items-center space-x-4 group\">\n            <div className=\"w-12 h-12 bg-gradient-to-br from-navy-primary to-navy-secondary rounded-xl flex items-center justify-center shadow-lg group-hover:shadow-xl transition-all duration-300 border border-navy-primary/20\">\n              <span className=\"text-white font-bold text-xl\">K</span>\n            </div>\n            <div className=\"flex flex-col\">\n              <span className=\"text-2xl font-bold text-white\">Kanguya Builders</span>\n              <span className=\"text-xs text-navy-light font-medium tracking-wider\">{t('header.tagline')}</span>\n            </div>\n          </Link>\n          \n          <div className=\"hidden lg:flex items-center space-x-2\">\n            <Link \n              href=\"/\" \n              className={`px-4 py-2.5 rounded-lg font-medium transition-all duration-200 hover:bg-navy-primary/20 ${isActiveLink(\"/\") ? \"text-navy-light bg-navy-primary/30 shadow-sm\" : \"text-navy-light/80 hover:text-white\"}`}\n              data-testid=\"nav-home\"\n            >\n              {t('nav.home')}\n            </Link>\n            <Link \n              href=\"/services\" \n              className={`px-4 py-2.5 rounded-lg font-medium transition-all duration-200 hover:bg-navy-primary/20 ${isActiveLink(\"/services\") ? \"text-navy-light bg-navy-primary/30 shadow-sm\" : \"text-navy-light/80 hover:text-white\"}`}\n              data-testid=\"nav-services\"\n            >\n              {t('nav.services')}\n            </Link>\n            <Link \n              href=\"/projects\" \n              className={`px-4 py-2.5 rounded-lg font-medium transition-all duration-200 hover:bg-navy-primary/20 ${isActiveLink(\"/projects\") ? \"text-navy-light bg-navy-primary/30 shadow-sm\" : \"text-navy-light/80 hover:text-white\"}`}\n              data-testid=\"nav-projects\"\n            >\n              {t('nav.projects')}\n            </Link>\n            <Link \n              href=\"/about\" \n              className={`px-4 py-2.5 rounded-lg font-medium transition-all duration-200 hover:bg-navy-primary/20 ${isActiveLink(\"/about\") ? \"text-navy-light bg-navy-primary/30 shadow-sm\" : \"text-navy-light/80 hover:text-white\"}`}\n              data-testid=\"nav-about\"\n            >\n              {t('nav.about')}\n            </Link>\n            <Link \n              href=\"/reviews\" \n              className={`px-4 py-2.5 rounded-lg font-medium transition-all duration-200 hover:bg-navy-primary/20 ${isActiveLink(\"/reviews\") ? \"text-navy-light bg-navy-primary/30 shadow-sm\" : \"text-navy-light/80 hover:text-white\"}`}\n              data-testid=\"nav-reviews\"\n            >\n              {t('nav.reviews')}\n            </Link>\n            <Link \n              href=\"/gallery\" \n              className={`px-4 py-2.5 rounded-lg font-medium transition-all duration-200 hover:bg-navy-primary/20 ${isActiveLink(\"/gallery\") ? \"text-navy-light bg-navy-primary/30 shadow-sm\" : \"text-navy-light/80 hover:text-white\"}`}\n              data-testid=\"nav-gallery\"\n            >\n              {t('nav.gallery')}\n            </Link>\n            <Link \n              href=\"/cost-estimator\" \n              className={`px-4 py-2.5 rounded-lg font-medium transition-all duration-200 hover:bg-navy-primary/20 ${isActiveLink(\"/cost-estimator\") ? \"text-navy-light bg-navy-primary/30 shadow-sm\" : \"text-navy-light/80 hover:text-white\"}`}\n              data-testid=\"nav-cost-estimator\"\n            >\n              {t('nav.costEstimator')}\n            </Link>\n            <Link \n              href=\"/contact\" \n              className={`px-4 py-2.5 rounded-lg font-medium transition-all duration-200 hover:bg-navy-primary/20 ${isActiveLink(\"/contact\") ? \"text-navy-light bg-navy-primary/30 shadow-sm\" : \"text-navy-light/80 hover:text-white\"}`}\n              data-testid=\"nav-contact\"\n            >\n              {t('nav.contact')}\n            </Link>\n          </div>\n\n          <div className=\"hidden md:flex items-center space-x-4\">\n            <LanguageSelector />\n            <div className=\"w-px h-6 bg-navy-primary/30\"></div>\n            <a \n              href=\"https://wa.me/27790562847?text=Hi%20Kanguya%20Builders!%20I%27m%20interested%20in%20your%20construction%20services.\" \n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"text-green-400 hover:text-green-300 transition-all duration-200 flex items-center px-3 py-2 rounded-lg hover:bg-green-500/20\"\n              data-testid=\"header-whatsapp\"\n              title={t('header.whatsappButton')}\n            >\n              <SiWhatsapp className=\"h-5 w-5\" />\n            </a>\n            <Link \n              href=\"/quote\" \n              className=\"bg-gradient-to-r from-navy-primary to-navy-secondary hover:from-navy-secondary hover:to-navy-primary text-white px-6 py-2.5 rounded-lg transition-all duration-200 font-semibold text-sm shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 border border-navy-primary/20\"\n              data-testid=\"header-quote-button\"\n            >\n              {t('nav.getQuote')}\n            </Link>\n          </div>\n\n          <button \n            className=\"lg:hidden text-white hover:text-navy-light transition-colors\" \n            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n            data-testid=\"mobile-menu-toggle\"\n          >\n            {isMobileMenuOpen ? <X className=\"h-6 w-6\" /> : <Menu className=\"h-6 w-6\" />}\n          </button>\n        </div>\n\n        {/* Mobile Menu */}\n        {isMobileMenuOpen && (\n          <div className=\"lg:hidden mt-4 pb-4 border-t border-navy-primary/30 pt-4\">\n            <div className=\"flex flex-col space-y-3\">\n              <Link \n                href=\"/\" \n                className={`hover:text-navy-light transition-colors text-left ${isActiveLink(\"/\") ? \"text-navy-light\" : \"text-white/80\"}`}\n                data-testid=\"mobile-nav-home\"\n                onClick={() => setIsMobileMenuOpen(false)}\n              >\n                {t('nav.home')}\n              </Link>\n              <Link \n                href=\"/services\" \n                className={`hover:text-navy-light transition-colors text-left ${isActiveLink(\"/services\") ? \"text-navy-light\" : \"text-white/80\"}`}\n                data-testid=\"mobile-nav-services\"\n                onClick={() => setIsMobileMenuOpen(false)}\n              >\n                {t('nav.services')}\n              </Link>\n              <Link \n                href=\"/projects\" \n                className={`hover:text-navy-light transition-colors text-left ${isActiveLink(\"/projects\") ? \"text-navy-light\" : \"text-white/80\"}`}\n                data-testid=\"mobile-nav-projects\"\n                onClick={() => setIsMobileMenuOpen(false)}\n              >\n                {t('nav.projects')}\n              </Link>\n              <Link \n                href=\"/about\" \n                className={`hover:text-navy-light transition-colors text-left ${isActiveLink(\"/about\") ? \"text-navy-light\" : \"text-white/80\"}`}\n                data-testid=\"mobile-nav-about\"\n                onClick={() => setIsMobileMenuOpen(false)}\n              >\n                {t('nav.about')}\n              </Link>\n              <Link \n                href=\"/reviews\" \n                className={`hover:text-navy-light transition-colors text-left ${isActiveLink(\"/reviews\") ? \"text-navy-light\" : \"text-white/80\"}`}\n                data-testid=\"mobile-nav-reviews\"\n                onClick={() => setIsMobileMenuOpen(false)}\n              >\n                {t('nav.reviews')}\n              </Link>\n              <Link \n                href=\"/gallery\" \n                className={`hover:text-navy-light transition-colors text-left ${isActiveLink(\"/gallery\") ? \"text-navy-light\" : \"text-white/80\"}`}\n                data-testid=\"mobile-nav-gallery\"\n                onClick={() => setIsMobileMenuOpen(false)}\n              >\n                {t('nav.gallery')}\n              </Link>\n              <Link \n                href=\"/cost-estimator\" \n                className={`hover:text-navy-light transition-colors text-left ${isActiveLink(\"/cost-estimator\") ? \"text-navy-light\" : \"text-white/80\"}`}\n                data-testid=\"mobile-nav-cost-estimator\"\n                onClick={() => setIsMobileMenuOpen(false)}\n              >\n                {t('nav.costEstimator')}\n              </Link>\n              <Link \n                href=\"/contact\" \n                className={`hover:text-navy-light transition-colors text-left ${isActiveLink(\"/contact\") ? \"text-navy-light\" : \"text-white/80\"}`}\n                data-testid=\"mobile-nav-contact\"\n                onClick={() => setIsMobileMenuOpen(false)}\n              >\n                {t('nav.contact')}\n              </Link>\n              <a \n                href=\"tel:+27790562847\" \n                className=\"text-muted-foreground hover:text-orange-primary transition-colors flex items-center\"\n                data-testid=\"mobile-phone\"\n              >\n                <Phone className=\"mr-2 h-4 w-4\" />\n                +27 79 056 2847\n              </a>\n              <a \n                href=\"https://wa.me/27790562847?text=Hi%20Kanguya%20Builders!%20I%27m%20interested%20in%20your%20construction%20services.\" \n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-muted-foreground hover:text-orange-primary transition-colors flex items-center\"\n                data-testid=\"mobile-whatsapp\"\n              >\n                <SiWhatsapp className=\"mr-2 h-4 w-4\" />\n                Chat on WhatsApp\n              </a>\n              <Link \n                href=\"/quote\" \n                className=\"bg-orange-primary hover:bg-orange-secondary text-white px-6 py-2 rounded-lg transition-colors text-center\"\n                data-testid=\"mobile-quote-button\"\n                onClick={() => setIsMobileMenuOpen(false)}\n              >\n                Get Quote\n              </Link>\n            </div>\n          </div>\n        )}\n      </nav>\n    </header>\n  );\n}\n","size_bytes":11129},"client/src/components/hero.tsx":{"content":"import { Link } from \"wouter\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function Hero() {\n  const { t } = useTranslation();\n  \n  return (\n    <section \n      id=\"home\" \n      className=\"relative bg-gradient-to-r from-blue-primary to-blue-secondary min-h-screen flex items-center\"\n    >\n      {/* Background overlay */}\n      <div className=\"absolute inset-0 bg-black bg-opacity-40\"></div>\n      <div \n        className=\"absolute inset-0\" \n        style={{\n          backgroundImage: \"url('https://images.unsplash.com/photo-1504307651254-35680f356dfd?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1920&h=1080')\",\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\"\n        }}\n      ></div>\n      \n      <div className=\"container mx-auto px-4 relative z-10\">\n        <div className=\"max-w-3xl\">\n          <h2 className=\"text-5xl md:text-6xl font-bold text-white mb-6 leading-tight\">\n            {t('hero.title')}\n          </h2>\n          <p className=\"text-xl text-gray-100 mb-8 leading-relaxed\">\n            {t('hero.subtitle')}\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4\">\n            <Link \n              href=\"/quote\" \n              className=\"bg-orange-primary hover:bg-orange-secondary text-white px-8 py-4 rounded-lg transition-colors font-semibold text-lg text-center\"\n              data-testid=\"hero-quote-button\"\n            >\n              {t('nav.getQuote')}\n            </Link>\n            <Link \n              href=\"/projects\" \n              className=\"border-2 border-white text-white hover:bg-white hover:text-gray-900 px-8 py-4 rounded-lg transition-colors font-semibold text-lg text-center\"\n              data-testid=\"hero-projects-button\"\n            >\n              {t('projects.viewDetails')}\n            </Link>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":1917},"client/src/components/index.ts":{"content":"export { default as Header } from './header';\nexport { default as Hero } from './hero';\nexport { default as Services } from './services';\nexport { default as Projects } from './projects';\nexport { default as About } from './about';\nexport { default as QuoteForm } from './quote-form';\nexport { default as Contact } from './contact';\nexport { default as CostEstimator } from './cost-estimator';\nexport { default as Footer } from './footer';\nexport { default as ProjectDetailsModal } from './project-details-modal';\nexport { default as FeaturedProjects } from './featured-projects';\nexport { default as Reviews } from './reviews';\nexport { default as Gallery } from './gallery';","size_bytes":676},"client/src/components/project-details-modal.tsx":{"content":"import { useState } from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Calendar, MapPin, Users, Clock, Wrench, CheckCircle, AlertTriangle, Lightbulb } from \"lucide-react\";\nimport type { Project } from \"@shared/schema\";\n\ninterface ProjectDetailsModalProps {\n  project: Project;\n  children: React.ReactNode;\n}\n\nexport default function ProjectDetailsModal({ project, children }: ProjectDetailsModalProps) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <Dialog open={isOpen} onOpenChange={setIsOpen}>\n      <DialogTrigger asChild>\n        {children}\n      </DialogTrigger>\n      <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto bg-card border-border\">\n        <DialogHeader>\n          <DialogTitle className=\"text-2xl text-foreground\">{project.title}</DialogTitle>\n        </DialogHeader>\n        \n        <div className=\"grid gap-6\">\n          {/* Project Image */}\n          <div className=\"relative\">\n            <img \n              src={project.imageUrl} \n              alt={project.title}\n              className=\"w-full h-64 object-cover rounded-lg\"\n            />\n            <div className=\"absolute top-4 left-4\">\n              <Badge variant=\"secondary\" className=\"bg-orange-primary text-white\">\n                {project.category.charAt(0).toUpperCase() + project.category.slice(1)}\n              </Badge>\n            </div>\n          </div>\n\n          {/* Project Overview */}\n          <div className=\"grid md:grid-cols-2 gap-4\">\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center gap-2 text-muted-foreground\">\n                <MapPin className=\"h-4 w-4 text-orange-primary\" />\n                <span>{project.location}</span>\n              </div>\n              <div className=\"flex items-center gap-2 text-muted-foreground\">\n                <Calendar className=\"h-4 w-4 text-orange-primary\" />\n                <span>Completed {project.completedYear}</span>\n              </div>\n              {project.duration && (\n                <div className=\"flex items-center gap-2 text-muted-foreground\">\n                  <Clock className=\"h-4 w-4 text-orange-primary\" />\n                  <span>Duration: {project.duration}</span>\n                </div>\n              )}\n              {project.teamSize && (\n                <div className=\"flex items-center gap-2 text-muted-foreground\">\n                  <Users className=\"h-4 w-4 text-orange-primary\" />\n                  <span>Team Size: {project.teamSize}</span>\n                </div>\n              )}\n            </div>\n            \n            {project.clientName && (\n              <div className=\"bg-muted/50 p-4 rounded-lg\">\n                <h4 className=\"font-semibold text-foreground mb-2\">Client</h4>\n                <p className=\"text-muted-foreground\">{project.clientName}</p>\n              </div>\n            )}\n          </div>\n\n          {/* Detailed Description */}\n          {project.detailedDescription && (\n            <div>\n              <h4 className=\"font-semibold text-foreground mb-3 flex items-center gap-2\">\n                <CheckCircle className=\"h-5 w-5 text-orange-primary\" />\n                Project Overview\n              </h4>\n              <p className=\"text-muted-foreground leading-relaxed\">{project.detailedDescription}</p>\n            </div>\n          )}\n\n          {/* Project Scope */}\n          {project.projectScope && project.projectScope.length > 0 && (\n            <div>\n              <h4 className=\"font-semibold text-foreground mb-3 flex items-center gap-2\">\n                <Wrench className=\"h-5 w-5 text-orange-primary\" />\n                Project Scope\n              </h4>\n              <div className=\"grid md:grid-cols-2 gap-2\">\n                {project.projectScope.map((scope, index) => (\n                  <div key={index} className=\"flex items-center gap-2\">\n                    <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                    <span className=\"text-muted-foreground\">{scope}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Challenges & Solutions */}\n          <div className=\"grid md:grid-cols-2 gap-6\">\n            {project.challenges && (\n              <div>\n                <h4 className=\"font-semibold text-foreground mb-3 flex items-center gap-2\">\n                  <AlertTriangle className=\"h-5 w-5 text-orange-primary\" />\n                  Challenges\n                </h4>\n                <p className=\"text-muted-foreground leading-relaxed\">{project.challenges}</p>\n              </div>\n            )}\n            \n            {project.solution && (\n              <div>\n                <h4 className=\"font-semibold text-foreground mb-3 flex items-center gap-2\">\n                  <Lightbulb className=\"h-5 w-5 text-orange-primary\" />\n                  Our Solution\n                </h4>\n                <p className=\"text-muted-foreground leading-relaxed\">{project.solution}</p>\n              </div>\n            )}\n          </div>\n\n          {/* Materials Used */}\n          {project.materials && project.materials.length > 0 && (\n            <div>\n              <h4 className=\"font-semibold text-foreground mb-3\">Materials & Equipment</h4>\n              <div className=\"flex flex-wrap gap-2\">\n                {project.materials.map((material, index) => (\n                  <Badge key={index} variant=\"outline\" className=\"border-orange-primary/20 text-foreground\">\n                    {material}\n                  </Badge>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Call to Action */}\n          <div className=\"bg-muted/50 p-6 rounded-lg text-center\">\n            <h4 className=\"font-semibold text-foreground mb-2\">Interested in a Similar Project?</h4>\n            <p className=\"text-muted-foreground mb-4\">\n              Contact us today for a free consultation and quote for your construction needs.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-3 justify-center\">\n              <a\n                href=\"tel:+27790562847\"\n                className=\"bg-orange-primary hover:bg-orange-secondary text-white px-6 py-2 rounded-lg transition-colors font-medium text-center\"\n                data-testid=\"modal-call-now\"\n              >\n                Call Now: +27 79 056 2847\n              </a>\n              <a\n                href=\"https://wa.me/27790562847?text=Hi%20Kanguya%20Builders!%20I%20saw%20your%20project%20and%20I%27m%20interested%20in%20similar%20construction%20services.\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"border border-orange-primary text-orange-primary hover:bg-orange-primary hover:text-white px-6 py-2 rounded-lg transition-colors font-medium text-center\"\n                data-testid=\"modal-whatsapp\"\n              >\n                Chat on WhatsApp\n              </a>\n            </div>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}","size_bytes":7139},"client/src/components/projects.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useTranslation } from \"react-i18next\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport ProjectDetailsModal from \"./project-details-modal\";\nimport type { Project } from \"@shared/schema\";\n\nexport default function Projects() {\n  const [visibleCount, setVisibleCount] = useState(6);\n  const { t } = useTranslation();\n  const { data: projects, isLoading } = useQuery<Project[]>({\n    queryKey: [\"/api/projects\"],\n  });\n  \n  const loadMore = () => {\n    setVisibleCount(prev => prev + 6);\n  };\n  \n  const hasMoreProjects = projects && visibleCount < projects.length;\n\n  if (isLoading) {\n    return (\n      <section id=\"projects\" className=\"py-20 bg-background\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h3 className=\"text-4xl font-bold text-foreground mb-4\">{t('projects.title')}</h3>\n            <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n              {t('projects.subtitle')}\n            </p>\n          </div>\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {Array.from({ length: 12 }).map((_, index) => (\n              <div key={index} className=\"bg-card rounded-xl border border-border overflow-hidden\">\n                <Skeleton className=\"w-full h-48\" />\n                <div className=\"p-6\">\n                  <Skeleton className=\"h-6 w-3/4 mb-2\" />\n                  <Skeleton className=\"h-4 w-full mb-3\" />\n                  <div className=\"flex items-center justify-between\">\n                    <Skeleton className=\"h-4 w-24\" />\n                    <Skeleton className=\"h-4 w-20\" />\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <section id=\"projects\" className=\"py-20 bg-background\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-16\">\n          <h3 className=\"text-4xl font-bold text-foreground mb-4\">Our Projects Portfolio</h3>\n          <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n            Explore our comprehensive collection of construction, renovation, and specialized building projects across Cape Town and beyond.\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12\">\n          {projects?.slice(0, visibleCount).map((project) => (\n            <div \n              key={project.id} \n              className=\"bg-card rounded-xl border border-border overflow-hidden hover:border-orange-primary/50 transition-all\"\n              data-testid={`project-card-${project.id}`}\n            >\n              <img \n                src={project.imageUrl} \n                alt={project.title} \n                className=\"w-full h-48 object-cover\"\n              />\n              <div className=\"p-6\">\n                <h4 className=\"text-lg font-semibold text-foreground mb-2\">{project.title}</h4>\n                <p className=\"text-muted-foreground text-sm mb-3\">{project.description}</p>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-orange-primary font-medium\">\n                    {t('projects.year')}: {project.completedYear}\n                  </span>\n                  <ProjectDetailsModal project={project}>\n                    <button \n                      className=\"text-orange-primary hover:text-orange-secondary text-sm font-medium transition-colors\"\n                      data-testid={`project-details-${project.id}`}\n                    >\n                      {t('projects.viewDetails')}\n                    </button>\n                  </ProjectDetailsModal>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {hasMoreProjects && (\n          <div className=\"text-center\">\n            <button \n              onClick={loadMore}\n              className=\"bg-orange-primary hover:bg-orange-secondary text-white px-8 py-3 rounded-lg transition-colors font-medium\"\n              data-testid=\"see-more-projects\"\n            >\n              {t('common.view')} {t('nav.projects')}\n            </button>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n}\n","size_bytes":4333},"client/src/components/quote-form.tsx":{"content":"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useTranslation } from \"react-i18next\";\nimport { insertQuoteRequestSchema } from \"@shared/schema\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport type { InsertQuoteRequest } from \"@shared/schema\";\n\nexport default function QuoteForm() {\n  const { t } = useTranslation();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const [showCustomBudget, setShowCustomBudget] = useState(false);\n  \n  const form = useForm<InsertQuoteRequest>({\n    resolver: zodResolver(insertQuoteRequestSchema),\n    defaultValues: {\n      fullName: \"\",\n      phone: \"\",\n      email: \"\",\n      projectType: \"\",\n      budget: \"\",\n      location: \"\",\n      description: \"\",\n    },\n  });\n\n  const submitQuoteMutation = useMutation({\n    mutationFn: async (data: InsertQuoteRequest) => {\n      const response = await apiRequest(\"POST\", \"/api/quote-requests\", data);\n      return response.json();\n    },\n    onSuccess: (data) => {\n      toast({\n        title: t('quote.toast.success'),\n        description: data.message,\n      });\n      form.reset();\n      queryClient.invalidateQueries({ queryKey: [\"/api/quote-requests\"] });\n    },\n    onError: (error: any) => {\n      toast({\n        title: t('common.error'),\n        description: error.message || t('quote.toast.error'),\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: InsertQuoteRequest) => {\n    submitQuoteMutation.mutate(data);\n  };\n\n  return (\n    <section id=\"quote\" className=\"py-20 bg-blue-primary\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"text-center text-white mb-12\">\n            <h3 className=\"text-4xl font-bold mb-4\">{t('quote.title')}</h3>\n            <p className=\"text-xl text-blue-100\">\n              {t('quote.subtitle')}\n            </p>\n          </div>\n\n          <div className=\"bg-white rounded-xl shadow-2xl p-8\">\n            <Form {...form}>\n              <form onSubmit={form.handleSubmit(onSubmit)} className=\"grid md:grid-cols-2 gap-6\">\n                <FormField\n                  control={form.control}\n                  name=\"fullName\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>{t('quote.form.fullName')}</FormLabel>\n                      <FormControl>\n                        <Input \n                          placeholder={t('quote.form.fullNamePlaceholder')} \n                          {...field} \n                          data-testid=\"input-full-name\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"phone\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>{t('quote.form.phoneNumber')}</FormLabel>\n                      <FormControl>\n                        <Input \n                          placeholder={t('quote.form.phoneNumberPlaceholder')} \n                          {...field} \n                          data-testid=\"input-phone\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"email\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>{t('quote.form.emailAddress')}</FormLabel>\n                      <FormControl>\n                        <Input \n                          type=\"email\" \n                          placeholder={t('quote.form.emailAddressPlaceholder')} \n                          {...field} \n                          data-testid=\"input-email\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"projectType\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>{t('quote.form.projectType')}</FormLabel>\n                      <Select onValueChange={field.onChange} defaultValue={field.value}>\n                        <FormControl>\n                          <SelectTrigger data-testid=\"select-project-type\">\n                            <SelectValue placeholder={t('quote.form.selectProjectType')} />\n                          </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          <SelectItem value=\"new-construction\">{t('quote.form.projectTypes.newConstruction')}</SelectItem>\n                          <SelectItem value=\"renovation\">{t('quote.form.projectTypes.renovation')}</SelectItem>\n                          <SelectItem value=\"interior-exterior\">{t('quote.form.projectTypes.interiorExterior')}</SelectItem>\n                          <SelectItem value=\"maintenance\">{t('quote.form.projectTypes.maintenance')}</SelectItem>\n                          <SelectItem value=\"commercial\">{t('quote.form.projectTypes.commercial')}</SelectItem>\n                          <SelectItem value=\"other\">{t('quote.form.projectTypes.other')}</SelectItem>\n                        </SelectContent>\n                      </Select>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"budget\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>{t('quote.form.budgetRange')}</FormLabel>\n                      <Select \n                        onValueChange={(value) => {\n                          field.onChange(value);\n                          setShowCustomBudget(value === \"custom\");\n                        }} \n                        defaultValue={field.value || \"\"}\n                      >\n                        <FormControl>\n                          <SelectTrigger data-testid=\"select-budget\">\n                            <SelectValue placeholder={t('quote.form.selectBudgetRange')} />\n                          </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          <SelectItem value=\"under-5k\">{t('quote.form.budgetRanges.under5k')}</SelectItem>\n                          <SelectItem value=\"5k-15k\">{t('quote.form.budgetRanges.5k15k')}</SelectItem>\n                          <SelectItem value=\"15k-30k\">{t('quote.form.budgetRanges.15k30k')}</SelectItem>\n                          <SelectItem value=\"30k-50k\">{t('quote.form.budgetRanges.30k50k')}</SelectItem>\n                          <SelectItem value=\"50k-100k\">{t('quote.form.budgetRanges.50k100k')}</SelectItem>\n                          <SelectItem value=\"over-100k\">{t('quote.form.budgetRanges.over100k')}</SelectItem>\n                          <SelectItem value=\"custom\">{t('quote.form.budgetRanges.custom')}</SelectItem>\n                        </SelectContent>\n                      </Select>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                {showCustomBudget && (\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"customBudget\" className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                      {t('quote.form.enterBudget')}\n                    </label>\n                    <Input\n                      id=\"customBudget\"\n                      type=\"number\"\n                      placeholder={t('quote.form.enterAmountPlaceholder')}\n                      data-testid=\"input-custom-budget\"\n                      className=\"mt-1\"\n                    />\n                  </div>\n                )}\n\n                <FormField\n                  control={form.control}\n                  name=\"location\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>{t('quote.form.location')}</FormLabel>\n                      <FormControl>\n                        <Input \n                          placeholder={t('quote.form.locationPlaceholder')} \n                          {...field} \n                          data-testid=\"input-location\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <div className=\"md:col-span-2\">\n                  <FormField\n                    control={form.control}\n                    name=\"description\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>{t('quote.form.projectDescription')}</FormLabel>\n                        <FormControl>\n                          <Textarea \n                            rows={4} \n                            placeholder={t('quote.form.projectDescriptionPlaceholder')} \n                            className=\"resize-none\" \n                            {...field} \n                            data-testid=\"textarea-description\"\n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                </div>\n\n                <div className=\"md:col-span-2\">\n                  <Button \n                    type=\"submit\" \n                    className=\"w-full bg-orange-primary hover:bg-orange-secondary text-white py-4 text-lg font-semibold\"\n                    disabled={submitQuoteMutation.isPending}\n                    data-testid=\"button-submit-quote\"\n                  >\n                    {submitQuoteMutation.isPending ? t('common.submitting') : t('quote.form.submitButton')}\n                  </Button>\n                </div>\n              </form>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":10859},"client/src/components/review-display.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport type { Review } from \"@shared/schema\";\nimport { Card, CardContent, CardHeader } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Star, MapPin, ThumbsUp, Calendar } from \"lucide-react\";\n\nexport function ReviewDisplay() {\n  const { data: reviews, isLoading } = useQuery<Review[]>({\n    queryKey: [\"/api/reviews/approved\"],\n  });\n\n  const renderStars = (rating: string) => {\n    const numRating = parseInt(rating);\n    return (\n      <div className=\"flex gap-1\" data-testid={`stars-${rating}`}>\n        {[1, 2, 3, 4, 5].map((star) => (\n          <Star\n            key={star}\n            className={`w-4 h-4 ${\n              star <= numRating \n                ? \"text-yellow-400 fill-current\" \n                : \"text-gray-300 dark:text-gray-600\"\n            }`}\n          />\n        ))}\n      </div>\n    );\n  };\n\n  const getServiceBadgeColor = (service: string) => {\n    const colors: { [key: string]: string } = {\n      brickwork: \"bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200\",\n      plumbing: \"bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\",\n      carpentry: \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200\",\n      plastering: \"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\",\n      tiling: \"bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200\",\n      landscaping: \"bg-emerald-100 text-emerald-800 dark:bg-emerald-900 dark:text-emerald-200\",\n      painting: \"bg-indigo-100 text-indigo-800 dark:bg-indigo-900 dark:text-indigo-200\"\n    };\n    return colors[service] || \"bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-200\";\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-6\" data-testid=\"reviews-loading\">\n        {[1, 2, 3].map((i) => (\n          <Card key={i} className=\"animate-pulse\">\n            <CardHeader>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"space-y-2\">\n                  <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-32\"></div>\n                  <div className=\"h-3 bg-gray-200 dark:bg-gray-700 rounded w-20\"></div>\n                </div>\n                <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-16\"></div>\n              </div>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-2\">\n                <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-full\"></div>\n                <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-3/4\"></div>\n                <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-1/2\"></div>\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    );\n  }\n\n  if (!reviews || reviews.length === 0) {\n    return (\n      <Card className=\"text-center py-12\" data-testid=\"no-reviews\">\n        <CardContent>\n          <div className=\"text-gray-500 dark:text-gray-400\">\n            <Star className=\"w-12 h-12 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-semibold mb-2\">No Reviews Yet</h3>\n            <p>Be the first to share your experience with Kanguya Builders!</p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  const averageRating = reviews.reduce((acc, review) => acc + parseInt(review.rating), 0) / reviews.length;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Overall Rating Summary */}\n      <Card className=\"bg-gradient-to-r from-orange-50 to-blue-50 dark:from-orange-900/20 dark:to-blue-900/20\">\n        <CardContent className=\"pt-6\">\n          <div className=\"text-center\">\n            <div className=\"text-4xl font-bold text-orange-600 dark:text-orange-400 mb-2\">\n              {averageRating.toFixed(1)}\n            </div>\n            <div className=\"flex justify-center mb-2\" data-testid=\"average-rating-stars\">\n              {renderStars(Math.round(averageRating).toString())}\n            </div>\n            <p className=\"text-gray-600 dark:text-gray-400\">\n              Based on {reviews.length} customer review{reviews.length !== 1 ? 's' : ''}\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Individual Reviews */}\n      <div className=\"space-y-4\" data-testid=\"reviews-list\">\n        {reviews.map((review, index) => (\n          <Card key={review.id} className=\"hover:shadow-lg transition-shadow\" data-testid={`review-${index}`}>\n            <CardHeader className=\"pb-3\">\n              <div className=\"flex items-start justify-between\">\n                <div className=\"space-y-1\">\n                  <h4 className=\"font-semibold text-lg text-blue-900 dark:text-blue-100\">\n                    {review.title}\n                  </h4>\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"font-medium text-gray-900 dark:text-gray-100\">\n                      {review.customerName}\n                    </span>\n                    {review.projectLocation && (\n                      <div className=\"flex items-center gap-1 text-sm text-gray-600 dark:text-gray-400\">\n                        <MapPin className=\"w-3 h-3\" />\n                        {review.projectLocation}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div className=\"text-right space-y-2\">\n                  {renderStars(review.rating)}\n                  <div className=\"text-xs text-gray-500 dark:text-gray-400 flex items-center gap-1\">\n                    <Calendar className=\"w-3 h-3\" />\n                    {review.createdAt ? new Date(review.createdAt).toLocaleDateString() : 'Recently'}\n                  </div>\n                </div>\n              </div>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-gray-700 dark:text-gray-300 mb-4 leading-relaxed\">\n                {review.review}\n              </p>\n              \n              <div className=\"flex flex-wrap items-center gap-2 mb-3\">\n                <Badge className={getServiceBadgeColor(review.serviceUsed)}>\n                  {review.serviceUsed}\n                </Badge>\n                \n                {review.recommendToOthers === \"yes\" && (\n                  <Badge variant=\"outline\" className=\"text-green-700 border-green-300 dark:text-green-400 dark:border-green-600\">\n                    <ThumbsUp className=\"w-3 h-3 mr-1\" />\n                    Recommends\n                  </Badge>\n                )}\n              </div>\n\n              {review.recommendToOthers === \"yes\" && (\n                <div className=\"text-sm text-green-700 dark:text-green-400 font-medium\">\n                  ✓ Would recommend Kanguya Builders to others\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n}","size_bytes":6869},"client/src/components/review-form.tsx":{"content":"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useTranslation } from \"react-i18next\";\nimport { z } from \"zod\";\nimport { insertReviewSchema } from \"@shared/schema\";\nimport { Button } from \"@/components/ui/button\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Star, Send, CheckCircle } from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\nconst reviewFormSchema = insertReviewSchema.extend({\n  rating: z.string().min(1, \"Please select a rating\"),\n  title: z.string().min(5, \"Title must be at least 5 characters\"),\n  review: z.string().min(20, \"Review must be at least 20 characters\"),\n  customerName: z.string().min(2, \"Name must be at least 2 characters\"),\n  customerEmail: z.string().email(\"Please enter a valid email address\"),\n  serviceUsed: z.string().min(1, \"Please select the service used\"),\n  recommendToOthers: z.string().min(1, \"Please select if you would recommend us\")\n});\n\ntype ReviewFormData = z.infer<typeof reviewFormSchema>;\n\ninterface ReviewFormProps {\n  onSuccess?: () => void;\n}\n\nexport function ReviewForm({ onSuccess }: ReviewFormProps) {\n  const { t } = useTranslation();\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const form = useForm<ReviewFormData>({\n    resolver: zodResolver(reviewFormSchema),\n    defaultValues: {\n      customerName: \"\",\n      customerEmail: \"\",\n      customerPhone: \"\",\n      rating: \"\",\n      title: \"\",\n      review: \"\",\n      serviceUsed: \"\",\n      projectLocation: \"\",\n      recommendToOthers: \"\"\n    },\n  });\n\n  const createReview = useMutation({\n    mutationFn: async (data: ReviewFormData) => {\n      const response = await apiRequest(\"POST\", \"/api/reviews\", data);\n      return response.json();\n    },\n    onSuccess: (data) => {\n      setIsSubmitted(true);\n      toast({\n        title: t('reviewForm.success.title'),\n        description: data.message || t('reviewForm.success.description'),\n      });\n      queryClient.invalidateQueries({ queryKey: [\"/api/reviews\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/reviews/approved\"] });\n      onSuccess?.();\n    },\n    onError: (error: any) => {\n      toast({\n        title: t('reviewForm.error.title'),\n        description: error.message || t('reviewForm.error.description'),\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: ReviewFormData) => {\n    createReview.mutate(data);\n  };\n\n  const renderStarRating = () => {\n    const rating = parseInt(form.watch(\"rating\")) || 0;\n    return (\n      <div className=\"flex gap-1\" data-testid=\"star-rating\">\n        {[1, 2, 3, 4, 5].map((star) => (\n          <button\n            key={star}\n            type=\"button\"\n            onClick={() => form.setValue(\"rating\", star.toString())}\n            className={`text-2xl ${\n              star <= rating \n                ? \"text-yellow-400\" \n                : \"text-gray-300 dark:text-gray-600\"\n            } hover:text-yellow-300 transition-colors`}\n            data-testid={`star-${star}`}\n          >\n            <Star fill=\"currentColor\" />\n          </button>\n        ))}\n      </div>\n    );\n  };\n\n  if (isSubmitted) {\n    return (\n      <Card className=\"bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-800\">\n        <CardContent className=\"pt-6\">\n          <div className=\"text-center\">\n            <CheckCircle className=\"w-16 h-16 text-green-600 dark:text-green-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-semibold text-green-800 dark:text-green-200 mb-2\">\n              {t('reviewForm.success.title')}\n            </h3>\n            <p className=\"text-green-700 dark:text-green-300 mb-4\">\n              {t('reviewForm.success.message')}\n            </p>\n            <Button \n              onClick={() => setIsSubmitted(false)}\n              variant=\"outline\"\n              className=\"text-green-700 dark:text-green-300 border-green-300 dark:border-green-600\"\n              data-testid=\"button-submit-another\"\n            >\n              {t('reviewForm.success.submitAnother')}\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"bg-white dark:bg-gray-800\">\n      <CardHeader>\n        <CardTitle className=\"text-2xl font-bold text-blue-900 dark:text-blue-100\">\n          {t('reviewForm.title')}\n        </CardTitle>\n        <CardDescription>\n          {t('reviewForm.description')}\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <FormField\n                control={form.control}\n                name=\"customerName\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>{t('reviewForm.form.fullName')}</FormLabel>\n                    <FormControl>\n                      <Input placeholder={t('reviewForm.form.fullNamePlaceholder')} {...field} data-testid=\"input-name\" />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"customerEmail\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>{t('reviewForm.form.emailAddress')}</FormLabel>\n                    <FormControl>\n                      <Input type=\"email\" placeholder={t('reviewForm.form.emailPlaceholder')} {...field} data-testid=\"input-email\" />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            <FormField\n              control={form.control}\n              name=\"customerPhone\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>{t('reviewForm.form.phoneNumber')}</FormLabel>\n                  <FormControl>\n                    <Input placeholder={t('reviewForm.form.phonePlaceholder')} {...field} value={field.value || \"\"} data-testid=\"input-phone\" />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <FormField\n                control={form.control}\n                name=\"serviceUsed\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>{t('reviewForm.form.serviceUsed')}</FormLabel>\n                    <Select onValueChange={field.onChange} defaultValue={field.value}>\n                      <FormControl>\n                        <SelectTrigger data-testid=\"select-service\">\n                          <SelectValue placeholder={t('reviewForm.form.serviceUsedPlaceholder')} />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        <SelectItem value=\"brickwork\">Brickwork</SelectItem>\n                        <SelectItem value=\"plumbing\">Plumbing</SelectItem>\n                        <SelectItem value=\"carpentry\">Carpentry</SelectItem>\n                        <SelectItem value=\"plastering\">Plastering</SelectItem>\n                        <SelectItem value=\"paving\">Paving</SelectItem>\n                        <SelectItem value=\"painting\">Painting</SelectItem>\n                        <SelectItem value=\"roofing\">Roofing</SelectItem>\n                        <SelectItem value=\"drywalls\">Drywalls</SelectItem>\n                        <SelectItem value=\"skimming\">Skimming</SelectItem>\n                        <SelectItem value=\"tiling\">Tiling</SelectItem>\n                        <SelectItem value=\"landscaping\">Landscaping</SelectItem>\n                        <SelectItem value=\"waterproofing\">Waterproofing</SelectItem>\n                        <SelectItem value=\"maintenance\">General Maintenance</SelectItem>\n                        <SelectItem value=\"renovation\">Renovation</SelectItem>\n                        <SelectItem value=\"construction\">New Construction</SelectItem>\n                        <SelectItem value=\"other\">Other</SelectItem>\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"projectLocation\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>{t('reviewForm.form.projectLocation')}</FormLabel>\n                    <FormControl>\n                      <Input placeholder={t('reviewForm.form.locationPlaceholder')} {...field} value={field.value || \"\"} data-testid=\"input-location\" />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            <FormField\n              control={form.control}\n              name=\"rating\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>{t('reviewForm.form.overallRating')}</FormLabel>\n                  <FormControl>\n                    <div className=\"space-y-2\">\n                      {renderStarRating()}\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        {field.value && `${field.value} star${parseInt(field.value) !== 1 ? 's' : ''}`}\n                      </p>\n                    </div>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"title\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>{t('reviewForm.form.reviewTitle')}</FormLabel>\n                  <FormControl>\n                    <Input placeholder={t('reviewForm.form.reviewTitlePlaceholder')} {...field} data-testid=\"input-title\" />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"review\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>{t('reviewForm.form.yourReview')}</FormLabel>\n                  <FormControl>\n                    <Textarea\n                      placeholder={t('reviewForm.form.reviewPlaceholder')}\n                      className=\"min-h-[120px]\"\n                      {...field}\n                      data-testid=\"textarea-review\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"recommendToOthers\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>{t('reviewForm.form.recommendQuestion')}</FormLabel>\n                  <Select onValueChange={field.onChange} defaultValue={field.value}>\n                    <FormControl>\n                      <SelectTrigger data-testid=\"select-recommend\">\n                        <SelectValue placeholder={t('reviewForm.form.recommendPlaceholder')} />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      <SelectItem value=\"yes\">Yes, I would recommend them</SelectItem>\n                      <SelectItem value=\"maybe\">Maybe, with some reservations</SelectItem>\n                      <SelectItem value=\"no\">No, I would not recommend them</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <Button \n              type=\"submit\" \n              disabled={createReview.isPending}\n              className=\"w-full bg-orange-600 hover:bg-orange-700 dark:bg-orange-700 dark:hover:bg-orange-600\"\n              data-testid=\"button-submit-review\"\n            >\n              {createReview.isPending ? (\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n                  Submitting Review...\n                </div>\n              ) : (\n                <div className=\"flex items-center gap-2\">\n                  <Send className=\"w-4 h-4\" />\n                  Submit Review\n                </div>\n              )}\n            </Button>\n          </form>\n        </Form>\n      </CardContent>\n    </Card>\n  );\n}","size_bytes":13432},"client/src/components/services.tsx":{"content":"import { Home, Wrench, PaintBucket, Hammer, Building, Layers, Square, Droplets, Drill, Grid3x3, TreePine, Shield } from \"lucide-react\";\nimport { useTranslation } from \"react-i18next\";\n\nconst getServices = (t: any) => [\n  {\n    icon: Grid3x3,\n    title: t('services.tiling'),\n    description: t('services.tilingDesc')\n  },\n  {\n    icon: Layers,\n    title: t('services.plastering'),\n    description: t('services.plasteringDesc')\n  },\n  {\n    icon: Square,\n    title: t('services.brickwork'),\n    description: t('services.brickworkDesc')\n  },\n  {\n    icon: PaintBucket,\n    title: t('services.painting'),\n    description: t('services.paintingDesc')\n  },\n  {\n    icon: Building,\n    title: t('services.paving'),\n    description: t('services.pavingDesc')\n  },\n  {\n    icon: Droplets,\n    title: t('services.plumbing'),\n    description: t('services.plumbingDesc')\n  },\n  {\n    icon: Hammer,\n    title: t('services.carpentry'),\n    description: t('services.carpentryDesc')\n  },\n  {\n    icon: Wrench,\n    title: t('services.maintenance'),\n    description: t('services.maintenanceDesc')\n  }\n];\n\nexport default function Services() {\n  const { t } = useTranslation();\n  \n  return (\n    <section id=\"services\" className=\"py-20 bg-gray-light\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-16\">\n          <h3 className=\"text-4xl font-bold text-gray-900 mb-4\">{t('services.title')}</h3>\n          <p className=\"text-xl text-gray-neutral max-w-2xl mx-auto\">\n            {t('services.subtitle')}\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {getServices(t).map((service, index) => (\n            <div \n              key={index} \n              className=\"bg-white rounded-xl shadow-lg p-6 hover:shadow-xl transition-shadow\"\n              data-testid={`service-card-${index}`}\n            >\n              <div className=\"text-orange-primary text-4xl mb-4\">\n                <service.icon className=\"h-10 w-10\" />\n              </div>\n              <h4 className=\"text-xl font-semibold text-gray-900 mb-3\">{service.title}</h4>\n              <p className=\"text-gray-neutral\">{service.description}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2265},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/about.tsx":{"content":"import { Header, About, Footer } from \"@/components\";\n\nexport default function AboutPage() {\n  return (\n    <div className=\"min-h-screen bg-background text-foreground\">\n      <Header />\n      <About />\n      <Footer />\n    </div>\n  );\n}","size_bytes":236},"client/src/pages/contact.tsx":{"content":"import { Header, Contact, Footer } from \"@/components\";\n\nexport default function ContactPage() {\n  return (\n    <div className=\"min-h-screen bg-background text-foreground\">\n      <Header />\n      <Contact />\n      <Footer />\n    </div>\n  );\n}","size_bytes":242},"client/src/pages/home.tsx":{"content":"import { Header, Hero, Footer } from \"@/components\";\n\nexport default function Home() {\n  return (\n    <div className=\"min-h-screen bg-background text-foreground\">\n      <Header />\n      <Hero />\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":230},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/projects.tsx":{"content":"import { Header, Projects, Footer } from \"@/components\";\n\nexport default function ProjectsPage() {\n  return (\n    <div className=\"min-h-screen bg-background text-foreground\">\n      <Header />\n      <Projects />\n      <Footer />\n    </div>\n  );\n}","size_bytes":245},"client/src/pages/quote.tsx":{"content":"import { Header, QuoteForm, Footer } from \"@/components\";\n\nexport default function QuotePage() {\n  return (\n    <div className=\"min-h-screen bg-background text-foreground\">\n      <Header />\n      <QuoteForm />\n      <Footer />\n    </div>\n  );\n}","size_bytes":244},"client/src/pages/reviews.tsx":{"content":"import { Header, Reviews, Footer } from \"@/components\";\n\nexport function ReviewsPage() {\n  return (\n    <div className=\"min-h-screen bg-background text-foreground\">\n      <Header />\n      <Reviews />\n      <Footer />\n    </div>\n  );\n}","size_bytes":234},"client/src/pages/services.tsx":{"content":"import { Header, Services, Footer } from \"@/components\";\n\nexport default function ServicesPage() {\n  return (\n    <div className=\"min-h-screen bg-background text-foreground\">\n      <Header />\n      <Services />\n      <Footer />\n    </div>\n  );\n}","size_bytes":245},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/components/cost-estimator.tsx":{"content":"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Calculator, DollarSign, Info, MapPin } from \"lucide-react\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\n\nconst estimatorSchema = z.object({\n  serviceType: z.string().min(1, \"Please select a service\"),\n  area: z.number().min(1, \"Area must be at least 1 square meter\"),\n  location: z.string().min(1, \"Please enter your location\"),\n  complexity: z.string().min(1, \"Please select complexity level\"),\n});\n\ntype EstimatorForm = z.infer<typeof estimatorSchema>;\n\n// Pricing per square meter in ZAR - Affordable rates to attract all customers\nconst servicePricing = {\n  tiling: { basic: 45, standard: 65, premium: 85 },\n  plastering: { basic: 35, standard: 50, premium: 70 },\n  brickwork: { basic: 55, standard: 75, premium: 95 },\n  painting: { basic: 25, standard: 35, premium: 50 },\n  paving: { basic: 40, standard: 60, premium: 80 },\n  plumbing: { basic: 75, standard: 100, premium: 130 },\n  carpentry: { basic: 60, standard: 85, premium: 110 },\n  maintenance: { basic: 30, standard: 45, premium: 65 },\n};\n\nexport default function CostEstimator() {\n  const { t } = useTranslation();\n  const [estimate, setEstimate] = useState<{\n    total: number;\n    serviceType: string;\n    area: number;\n    pricePerSqm: number;\n  } | null>(null);\n\n  const form = useForm<EstimatorForm>({\n    resolver: zodResolver(estimatorSchema),\n    defaultValues: {\n      serviceType: \"\",\n      area: 0,\n      location: \"\",\n      complexity: \"\",\n    },\n  });\n\n  const onSubmit = (data: EstimatorForm) => {\n    const service = servicePricing[data.serviceType as keyof typeof servicePricing];\n    const complexity = data.complexity as keyof typeof service;\n    const pricePerSqm = service[complexity];\n    const total = data.area * pricePerSqm;\n\n    setEstimate({\n      total,\n      serviceType: data.serviceType,\n      area: data.area,\n      pricePerSqm,\n    });\n  };\n\n  const formatCurrency = (amount: number) => {\n    return `R ${amount.toLocaleString('en-ZA')}`;\n  };\n\n  return (\n    <section className=\"py-20 bg-gray-light\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-4xl font-bold text-gray-900 mb-4\">\n            {t('costEstimator.title')}\n          </h2>\n          <p className=\"text-lg text-gray-neutral max-w-3xl mx-auto\">\n            {t('costEstimator.subtitle')}\n          </p>\n        </div>\n\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"grid lg:grid-cols-2 gap-8\">\n            {/* Form Section */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <Calculator className=\"mr-2 h-5 w-5 text-orange-primary\" />\n                  {t('costEstimator.projectDetails')}\n                </CardTitle>\n                <CardDescription>\n                  {t('costEstimator.projectDetailsDesc')}\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"serviceType\">{t('costEstimator.serviceType')}</Label>\n                    <Select\n                      onValueChange={(value) => form.setValue(\"serviceType\", value)}\n                      value={form.watch(\"serviceType\")}\n                    >\n                      <SelectTrigger data-testid=\"select-service-type\">\n                        <SelectValue placeholder={t('costEstimator.selectService')} />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"tiling\">{t('services.tiling')}</SelectItem>\n                        <SelectItem value=\"plastering\">{t('services.plastering')}</SelectItem>\n                        <SelectItem value=\"brickwork\">{t('services.brickwork')}</SelectItem>\n                        <SelectItem value=\"painting\">{t('services.painting')}</SelectItem>\n                        <SelectItem value=\"paving\">{t('services.paving')}</SelectItem>\n                        <SelectItem value=\"plumbing\">{t('services.plumbing')}</SelectItem>\n                        <SelectItem value=\"carpentry\">{t('services.carpentry')}</SelectItem>\n                        <SelectItem value=\"maintenance\">{t('services.maintenance')}</SelectItem>\n                      </SelectContent>\n                    </Select>\n                    {form.formState.errors.serviceType && (\n                      <p className=\"text-red-600 text-sm\">\n                        {form.formState.errors.serviceType.message}\n                      </p>\n                    )}\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"area\">{t('costEstimator.area')}</Label>\n                    <Input\n                      id=\"area\"\n                      type=\"number\"\n                      placeholder={t('costEstimator.areaPlaceholder')}\n                      data-testid=\"input-area\"\n                      {...form.register(\"area\", { valueAsNumber: true })}\n                    />\n                    {form.formState.errors.area && (\n                      <p className=\"text-red-600 text-sm\">\n                        {form.formState.errors.area.message}\n                      </p>\n                    )}\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"complexity\">{t('costEstimator.complexity')}</Label>\n                    <Select\n                      onValueChange={(value) => form.setValue(\"complexity\", value)}\n                      value={form.watch(\"complexity\")}\n                    >\n                      <SelectTrigger data-testid=\"select-complexity\">\n                        <SelectValue placeholder={t('costEstimator.selectComplexity')} />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"basic\">{t('costEstimator.basic')}</SelectItem>\n                        <SelectItem value=\"standard\">{t('costEstimator.standard')}</SelectItem>\n                        <SelectItem value=\"premium\">{t('costEstimator.premium')}</SelectItem>\n                      </SelectContent>\n                    </Select>\n                    {form.formState.errors.complexity && (\n                      <p className=\"text-red-600 text-sm\">\n                        {form.formState.errors.complexity.message}\n                      </p>\n                    )}\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"location\">{t('costEstimator.location')}</Label>\n                    <Input\n                      id=\"location\"\n                      placeholder={t('costEstimator.locationPlaceholder')}\n                      data-testid=\"input-location\"\n                      {...form.register(\"location\")}\n                    />\n                    {form.formState.errors.location && (\n                      <p className=\"text-red-600 text-sm\">\n                        {form.formState.errors.location.message}\n                      </p>\n                    )}\n                  </div>\n\n                  <Button\n                    type=\"submit\"\n                    className=\"w-full bg-orange-primary hover:bg-orange-secondary\"\n                    data-testid=\"button-calculate\"\n                  >\n                    <Calculator className=\"mr-2 h-4 w-4\" />\n                    {t('costEstimator.calculate')}\n                  </Button>\n                </form>\n              </CardContent>\n            </Card>\n\n            {/* Results Section */}\n            <div className=\"space-y-6\">\n              {estimate ? (\n                <Card className=\"border-orange-primary/20 bg-orange-primary/5\">\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center text-orange-primary\">\n                      <DollarSign className=\"mr-2 h-5 w-5\" />\n                      {t('costEstimator.costEstimate')}\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div>\n                        <p className=\"text-sm text-gray-neutral\">{t('costEstimator.serviceType')}</p>\n                        <p className=\"font-semibold capitalize\">{estimate.serviceType}</p>\n                      </div>\n                      <div>\n                        <p className=\"text-sm text-gray-neutral\">{t('costEstimator.area')}</p>\n                        <p className=\"font-semibold\">{estimate.area} m²</p>\n                      </div>\n                      <div>\n                        <p className=\"text-sm text-gray-neutral\">{t('costEstimator.ratePerSqm')}</p>\n                        <p className=\"font-semibold\">{formatCurrency(estimate.pricePerSqm)}</p>\n                      </div>\n                      <div>\n                        <p className=\"text-sm text-gray-neutral\">{t('costEstimator.totalEstimate')}</p>\n                        <p className=\"text-2xl font-bold text-orange-primary\">\n                          {formatCurrency(estimate.total)}\n                        </p>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ) : (\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center\">\n                      <Info className=\"mr-2 h-5 w-5 text-blue-primary\" />\n                      {t('costEstimator.aboutEstimates')}\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-gray-neutral mb-4\">\n                      {t('costEstimator.estimateDesc')}\n                    </p>\n                    <ul className=\"space-y-2 text-sm text-gray-neutral\">\n                      {t('costEstimator.estimatePoints', { returnObjects: true }).map((point: string, index: number) => (\n                        <li key={index}>• {point}</li>\n                      ))}\n                    </ul>\n                  </CardContent>\n                </Card>\n              )}\n\n              <Alert>\n                <Info className=\"h-4 w-4\" />\n                <AlertDescription>\n                  <strong>Important:</strong> {t('costEstimator.importantNote')}\n                </AlertDescription>\n              </Alert>\n\n              {estimate && (\n                <Card>\n                  <CardContent className=\"pt-6\">\n                    <div className=\"text-center space-y-4\">\n                      <h3 className=\"text-lg font-semibold\">{t('costEstimator.readyToStart')}</h3>\n                      <p className=\"text-gray-neutral text-sm\">\n                        {t('costEstimator.contactDesc')}\n                      </p>\n                      <div className=\"flex flex-col sm:flex-row gap-3\">\n                        <Button\n                          asChild\n                          className=\"flex-1 bg-orange-primary hover:bg-orange-secondary\"\n                        >\n                          <a href=\"/quote\" data-testid=\"button-get-quote\">\n                            {t('costEstimator.getDetailedQuote')}\n                          </a>\n                        </Button>\n                        <Button\n                          asChild\n                          variant=\"outline\"\n                          className=\"flex-1\"\n                        >\n                          <a href=\"/contact\" data-testid=\"button-contact-us\">\n                            <MapPin className=\"mr-2 h-4 w-4\" />\n                            {t('costEstimator.contactUs')}\n                          </a>\n                        </Button>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":12549},"client/src/components/language-selector.tsx":{"content":"import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Globe, ChevronDown } from \"lucide-react\";\n\nconst languages = [\n  { code: 'en', name: 'English', flag: '🇬🇧' },\n  { code: 'af', name: 'Afrikaans', flag: '🇿🇦' },\n  { code: 'zu', name: 'isiZulu', flag: '🇿🇦' },\n  { code: 'xh', name: 'isiXhosa', flag: '🇿🇦' },\n  { code: 'st', name: 'Sesotho', flag: '🇿🇦' },\n  { code: 'fr', name: 'Français', flag: '🇫🇷' },\n  { code: 'pt', name: 'Português', flag: '🇵🇹' },\n  { code: 'sw', name: 'Kiswahili', flag: '🇹🇿' },\n  { code: 'ny', name: 'Chinyanja', flag: '🇲🇼' },\n  { code: 'sn', name: 'chiShona', flag: '🇿🇼' },\n];\n\nexport default function LanguageSelector() {\n  const { i18n, t } = useTranslation();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const currentLanguage = languages.find(lang => lang.code === i18n.language) || languages[0];\n\n  // Properly categorize languages using filter-based grouping\n  const southAfricanLanguages = ['en', 'af', 'zu', 'xh', 'st'];\n  const africanLanguages = ['sw', 'ny', 'sn'];\n  const internationalLanguages = ['fr', 'pt'];\n\n  const handleLanguageChange = (languageCode: string) => {\n    i18n.changeLanguage(languageCode);\n    setIsOpen(false);\n    \n    // Set document language (all supported languages use LTR)\n    document.documentElement.dir = 'ltr';\n    document.documentElement.lang = languageCode;\n  };\n\n  return (\n    <DropdownMenu open={isOpen} onOpenChange={setIsOpen}>\n      <DropdownMenuTrigger asChild>\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"flex items-center gap-2\"\n          data-testid=\"language-selector\"\n        >\n          <Globe className=\"h-4 w-4\" />\n          <span className=\"hidden sm:inline\">{currentLanguage.flag}</span>\n          <span className=\"hidden md:inline\">{currentLanguage.name}</span>\n          <ChevronDown className=\"h-3 w-3\" />\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent \n        align=\"end\" \n        className=\"w-48 max-h-80 overflow-y-auto\"\n        data-testid=\"language-dropdown\"\n      >\n        <div className=\"px-2 py-1.5 text-sm font-semibold text-muted-foreground border-b\">\n          {t('common.selectLanguage')}\n        </div>\n        \n        {/* South African Languages */}\n        <div className=\"px-2 py-1 text-xs font-medium text-muted-foreground border-b bg-muted/30\">\n          South African Languages\n        </div>\n        {languages.filter(lang => southAfricanLanguages.includes(lang.code)).map((language) => (\n          <DropdownMenuItem\n            key={language.code}\n            onClick={() => handleLanguageChange(language.code)}\n            className={`flex items-center justify-between px-3 py-2 cursor-pointer ${\n              currentLanguage.code === language.code ? 'bg-orange-primary/10 text-orange-primary' : ''\n            }`}\n            data-testid={`language-${language.code}`}\n          >\n            <div className=\"flex items-center gap-2\">\n              <span>{language.flag}</span>\n              <span>{language.name}</span>\n            </div>\n            {currentLanguage.code === language.code && (\n              <span className=\"text-orange-primary\">✓</span>\n            )}\n          </DropdownMenuItem>\n        ))}\n        \n        {/* African Languages */}\n        <div className=\"px-2 py-1 text-xs font-medium text-muted-foreground border-b bg-muted/30\">\n          African Languages\n        </div>\n        {languages.filter(lang => africanLanguages.includes(lang.code)).map((language) => (\n          <DropdownMenuItem\n            key={language.code}\n            onClick={() => handleLanguageChange(language.code)}\n            className={`flex items-center justify-between px-3 py-2 cursor-pointer ${\n              currentLanguage.code === language.code ? 'bg-orange-primary/10 text-orange-primary' : ''\n            }`}\n            data-testid={`language-${language.code}`}\n          >\n            <div className=\"flex items-center gap-2\">\n              <span>{language.flag}</span>\n              <span>{language.name}</span>\n            </div>\n            {currentLanguage.code === language.code && (\n              <span className=\"text-orange-primary\">✓</span>\n            )}\n          </DropdownMenuItem>\n        ))}\n        \n        {/* International Languages */}\n        <div className=\"px-2 py-1 text-xs font-medium text-muted-foreground border-b bg-muted/30\">\n          International Languages\n        </div>\n        {languages.filter(lang => internationalLanguages.includes(lang.code)).map((language) => (\n          <DropdownMenuItem\n            key={language.code}\n            onClick={() => handleLanguageChange(language.code)}\n            className={`flex items-center justify-between px-3 py-2 cursor-pointer ${\n              currentLanguage.code === language.code ? 'bg-orange-primary/10 text-orange-primary' : ''\n            }`}\n            data-testid={`language-${language.code}`}\n          >\n            <div className=\"flex items-center gap-2\">\n              <span>{language.flag}</span>\n              <span>{language.name}</span>\n            </div>\n            {currentLanguage.code === language.code && (\n              <span className=\"text-orange-primary\">✓</span>\n            )}\n          </DropdownMenuItem>\n        ))}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}","size_bytes":5574},"client/src/i18n/index.ts":{"content":"import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\n// Import all language resources for the 10 supported languages\nimport en from './locales/en.json';\nimport af from './locales/af.json';\nimport zu from './locales/zu.json';\nimport xh from './locales/xh.json';\nimport st from './locales/st.json';\nimport fr from './locales/fr.json';\nimport pt from './locales/pt.json';\nimport sw from './locales/sw.json';\nimport ny from './locales/ny.json';\nimport sn from './locales/sn.json';\n\nconst resources = {\n  en: { translation: en },\n  af: { translation: af },\n  zu: { translation: zu },\n  xh: { translation: xh },\n  st: { translation: st },\n  fr: { translation: fr },\n  pt: { translation: pt },\n  sw: { translation: sw },\n  ny: { translation: ny },\n  sn: { translation: sn },\n};\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources,\n    fallbackLng: 'en',\n    debug: false,\n    \n    interpolation: {\n      escapeValue: false,\n    },\n    \n    detection: {\n      order: ['localStorage', 'navigator', 'htmlTag'],\n      lookupLocalStorage: 'i18nextLng',\n      caches: ['localStorage'],\n    },\n  });\n\nexport default i18n;","size_bytes":1226},"client/src/pages/cost-estimator.tsx":{"content":"import { Header, CostEstimator, Footer } from \"@/components\";\n\nexport default function CostEstimatorPage() {\n  return (\n    <div className=\"min-h-screen bg-background text-foreground\">\n      <Header />\n      <CostEstimator />\n      <Footer />\n    </div>\n  );\n}","size_bytes":260},"client/src/components/gallery.tsx":{"content":"import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Camera, Video, Play, X, ChevronLeft, ChevronRight, Images } from \"lucide-react\";\n\n// Import all gallery images and video\nimport img1 from \"@assets/WhatsApp Image 2025-08-26 at 20.10.21 (1)_1757330687489.jpeg\";\nimport img2 from \"@assets/WhatsApp Image 2025-08-26 at 20.10.22 (1)_1757330687489.jpeg\";\nimport img3 from \"@assets/WhatsApp Image 2025-08-26 at 20.10.22_1757330687489.jpeg\";\nimport img4 from \"@assets/WhatsApp Image 2025-08-26 at 20.10.23 (1)_1757330687488.jpeg\";\nimport img5 from \"@assets/WhatsApp Image 2025-08-26 at 20.10.23 (2)_1757330687487.jpeg\";\nimport img6 from \"@assets/WhatsApp Image 2025-08-26 at 20.10.23_1757330687488.jpeg\";\nimport img7 from \"@assets/WhatsApp Image 2025-08-26 at 20.10.24 (1)_1757330687486.jpeg\";\nimport img8 from \"@assets/WhatsApp Image 2025-08-26 at 20.10.24 (2)_1757330687486.jpeg\";\nimport img9 from \"@assets/WhatsApp Image 2025-08-26 at 20.10.24_1757330687487.jpeg\";\nimport img10 from \"@assets/WhatsApp Image 2025-08-26 at 20.10.25 (1)_1757330687486.jpeg\";\nimport img11 from \"@assets/WhatsApp Image 2025-08-26 at 20.10.26_1757330687486.jpeg\";\nimport img12 from \"@assets/WhatsApp Image 2025-08-26 at 20.10.28 (1)_1757330687485.jpeg\";\nimport img13 from \"@assets/WhatsApp Image 2025-08-26 at 20.10.28 (2)_1757330687485.jpeg\";\nimport img14 from \"@assets/WhatsApp Image 2025-08-26 at 20.10.28_1757330687485.jpeg\";\nimport img15 from \"@assets/WhatsApp Image 2025-08-26 at 20.10.29 (1)_1757330687484.jpeg\";\nimport img16 from \"@assets/WhatsApp Image 2025-08-26 at 20.10.29_1757330687485.jpeg\";\nimport img17 from \"@assets/WhatsApp Image 2025-08-26 at 20.10.30 (1)_1757330687484.jpeg\";\nimport img18 from \"@assets/WhatsApp Image 2025-08-26 at 20.10.30_1757330687484.jpeg\";\nimport video1 from \"@assets/WhatsApp Video 2025-08-26 at 20.10.27_1757330668549.mp4\";\n\ninterface GalleryItem {\n  id: string;\n  type: 'image' | 'video';\n  src: string;\n  title: string;\n  category: string;\n}\n\nexport default function Gallery() {\n  const { t } = useTranslation();\n  \n  const galleryItems: GalleryItem[] = [\n    { id: '1', type: 'image', src: img1, title: t('gallery.items.constructionProgress'), category: t('gallery.categories.buildingWork') },\n    { id: '2', type: 'image', src: img2, title: t('gallery.items.foundationWork'), category: t('gallery.categories.buildingWork') },\n    { id: '3', type: 'image', src: img3, title: t('gallery.items.structuralWork'), category: t('gallery.categories.buildingWork') },\n    { id: '4', type: 'image', src: img4, title: t('gallery.items.interiorWork'), category: t('gallery.categories.renovations') },\n    { id: '5', type: 'image', src: img5, title: t('gallery.items.finishingWork'), category: t('gallery.categories.renovations') },\n    { id: '6', type: 'image', src: img6, title: t('gallery.items.qualityCraftsmanship'), category: t('gallery.categories.buildingWork') },\n    { id: '7', type: 'image', src: img7, title: t('gallery.items.detailWork'), category: t('gallery.categories.renovations') },\n    { id: '8', type: 'image', src: img8, title: t('gallery.items.professionalInstallation'), category: t('gallery.categories.buildingWork') },\n    { id: '9', type: 'image', src: img9, title: t('gallery.items.constructionSite'), category: t('gallery.categories.buildingWork') },\n    { id: '10', type: 'image', src: img10, title: t('gallery.items.projectCompletion'), category: t('gallery.categories.buildingWork') },\n    { id: '11', type: 'image', src: img11, title: t('gallery.items.finalTouches'), category: t('gallery.categories.renovations') },\n    { id: '12', type: 'image', src: img12, title: t('gallery.items.qualityResults'), category: t('gallery.categories.renovations') },\n    { id: '13', type: 'image', src: img13, title: t('gallery.items.professionalWork'), category: t('gallery.categories.buildingWork') },\n    { id: '14', type: 'image', src: img14, title: t('gallery.items.constructionDetails'), category: t('gallery.categories.buildingWork') },\n    { id: '15', type: 'image', src: img15, title: t('gallery.items.renovationWork'), category: t('gallery.categories.renovations') },\n    { id: '16', type: 'image', src: img16, title: t('gallery.items.buildingProgress'), category: t('gallery.categories.buildingWork') },\n    { id: '17', type: 'image', src: img17, title: t('gallery.items.qualityFinish'), category: t('gallery.categories.renovations') },\n    { id: '18', type: 'image', src: img18, title: t('gallery.items.completedWork'), category: t('gallery.categories.renovations') },\n    { id: '19', type: 'video', src: video1, title: t('gallery.items.constructionProcess'), category: t('gallery.categories.buildingWork') },\n  ];\n\n  const categories = [t('gallery.categories.all'), t('gallery.categories.buildingWork'), t('gallery.categories.renovations')];\n  const [selectedCategory, setSelectedCategory] = useState(t('gallery.categories.all'));\n  const [selectedItem, setSelectedItem] = useState<GalleryItem | null>(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const filteredItems = selectedCategory === t('gallery.categories.all') \n    ? galleryItems \n    : galleryItems.filter(item => item.category === selectedCategory);\n\n  const openModal = (item: GalleryItem) => {\n    setSelectedItem(item);\n    setCurrentIndex(filteredItems.findIndex(i => i.id === item.id));\n  };\n\n  const closeModal = () => {\n    setSelectedItem(null);\n  };\n\n  const goToPrevious = () => {\n    const newIndex = currentIndex > 0 ? currentIndex - 1 : filteredItems.length - 1;\n    setCurrentIndex(newIndex);\n    setSelectedItem(filteredItems[newIndex]);\n  };\n\n  const goToNext = () => {\n    const newIndex = currentIndex < filteredItems.length - 1 ? currentIndex + 1 : 0;\n    setCurrentIndex(newIndex);\n    setSelectedItem(filteredItems[newIndex]);\n  };\n\n  return (\n    <section id=\"gallery\" className=\"py-20 bg-background\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-16\">\n          <div className=\"flex justify-center mb-4\">\n            <div className=\"bg-navy-primary text-white p-4 rounded-full\">\n              <Camera className=\"h-8 w-8\" />\n            </div>\n          </div>\n          <h2 className=\"text-4xl font-bold text-foreground mb-4\">\n            {t('gallery.title', 'Project Gallery')}\n          </h2>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto mb-8\">\n            {t('gallery.subtitle', 'Explore our portfolio of completed projects. See the quality craftsmanship and attention to detail that sets Kanguya Builders apart.')}\n          </p>\n\n          {/* Category Filters */}\n          <div className=\"flex flex-wrap justify-center gap-3\">\n            {categories.map((category) => (\n              <Button\n                key={category}\n                variant={selectedCategory === category ? \"default\" : \"outline\"}\n                onClick={() => setSelectedCategory(category)}\n                className={`${\n                  selectedCategory === category \n                    ? \"bg-navy-primary text-white\" \n                    : \"border-navy-primary text-navy-primary hover:bg-navy-primary hover:text-white\"\n                }`}\n                data-testid={`filter-${category.toLowerCase()}`}\n              >\n                {category}\n              </Button>\n            ))}\n          </div>\n        </div>\n\n        {/* Gallery Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n          {filteredItems.map((item, index) => (\n            <div \n              key={item.id}\n              className=\"group relative overflow-hidden rounded-xl shadow-lg hover:shadow-2xl transition-all duration-300 cursor-pointer bg-card border border-border\"\n              onClick={() => openModal(item)}\n              data-testid={`gallery-item-${item.id}`}\n            >\n              {item.type === 'image' ? (\n                <img\n                  src={item.src}\n                  alt={item.title}\n                  className=\"w-full h-64 object-cover group-hover:scale-105 transition-transform duration-300\"\n                  loading=\"lazy\"\n                />\n              ) : (\n                <div className=\"relative w-full h-64 bg-slate-200 flex items-center justify-center\">\n                  <video\n                    src={item.src}\n                    className=\"w-full h-full object-cover\"\n                    preload=\"metadata\"\n                  />\n                  <div className=\"absolute inset-0 bg-black/20 flex items-center justify-center group-hover:bg-black/30 transition-colors\">\n                    <Play className=\"w-16 h-16 text-white drop-shadow-lg\" />\n                  </div>\n                </div>\n              )}\n\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n              \n              <div className=\"absolute bottom-4 left-4 right-4 text-white opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n                <div className=\"flex items-center gap-2 mb-1\">\n                  {item.type === 'image' ? (\n                    <Camera className=\"w-4 h-4\" />\n                  ) : (\n                    <Video className=\"w-4 h-4\" />\n                  )}\n                  <Badge variant=\"secondary\" className=\"text-xs\">\n                    {item.category}\n                  </Badge>\n                </div>\n                <h3 className=\"font-semibold text-sm\">{item.title}</h3>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Modal for full-size view */}\n        <Dialog open={!!selectedItem} onOpenChange={closeModal}>\n          <DialogContent className=\"max-w-4xl max-h-[90vh] p-0 overflow-hidden\">\n            <DialogHeader className=\"p-4 pb-2\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <DialogTitle className=\"flex items-center gap-2\">\n                    {selectedItem?.type === 'image' ? (\n                      <Camera className=\"w-5 h-5\" />\n                    ) : (\n                      <Video className=\"w-5 h-5\" />\n                    )}\n                    {selectedItem?.title}\n                  </DialogTitle>\n                  <Badge variant=\"secondary\" className=\"mt-1\">\n                    {selectedItem?.category}\n                  </Badge>\n                </div>\n                <Button \n                  variant=\"ghost\" \n                  size=\"icon\"\n                  onClick={closeModal}\n                  className=\"h-8 w-8\"\n                  data-testid=\"close-modal\"\n                >\n                  <X className=\"h-4 w-4\" />\n                </Button>\n              </div>\n            </DialogHeader>\n\n            <div className=\"relative\">\n              {selectedItem?.type === 'image' ? (\n                <img\n                  src={selectedItem.src}\n                  alt={selectedItem.title}\n                  className=\"w-full max-h-[70vh] object-contain\"\n                />\n              ) : (\n                <video\n                  src={selectedItem?.src}\n                  controls\n                  autoPlay\n                  className=\"w-full max-h-[70vh] object-contain\"\n                  data-testid=\"video-player\"\n                />\n              )}\n\n              {/* Navigation arrows */}\n              {filteredItems.length > 1 && (\n                <>\n                  <Button\n                    variant=\"outline\"\n                    size=\"icon\"\n                    onClick={goToPrevious}\n                    className=\"absolute left-4 top-1/2 -translate-y-1/2 bg-white/90 hover:bg-white\"\n                    data-testid=\"previous-item\"\n                  >\n                    <ChevronLeft className=\"h-4 w-4\" />\n                  </Button>\n                  <Button\n                    variant=\"outline\"\n                    size=\"icon\"\n                    onClick={goToNext}\n                    className=\"absolute right-4 top-1/2 -translate-y-1/2 bg-white/90 hover:bg-white\"\n                    data-testid=\"next-item\"\n                  >\n                    <ChevronRight className=\"h-4 w-4\" />\n                  </Button>\n                </>\n              )}\n\n              {/* Image counter */}\n              <div className=\"absolute bottom-4 left-1/2 -translate-x-1/2 bg-black/60 text-white px-3 py-1 rounded-full text-sm\">\n                {currentIndex + 1} / {filteredItems.length}\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n\n        {/* Call to Action */}\n        <div className=\"text-center mt-16\">\n          <div className=\"bg-card p-8 rounded-xl border border-border max-w-2xl mx-auto\">\n            <Images className=\"w-12 h-12 text-navy-primary mx-auto mb-4\" />\n            <h3 className=\"text-2xl font-bold text-foreground mb-3\">\n              {t('gallery.cta.title', 'Ready to Start Your Project?')}\n            </h3>\n            <p className=\"text-muted-foreground mb-6\">\n              {t('gallery.cta.subtitle', 'Let us create something amazing for you too. Get in touch for a free consultation and quote.')}\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button\n                onClick={() => {\n                  const element = document.getElementById('quote');\n                  element?.scrollIntoView({ behavior: 'smooth' });\n                }}\n                className=\"bg-navy-primary hover:bg-navy-primary/90 text-white\"\n                data-testid=\"gallery-get-quote\"\n              >\n                {t('gallery.cta.quote', 'Get Free Quote')}\n              </Button>\n              <Button\n                onClick={() => {\n                  const element = document.getElementById('contact');\n                  element?.scrollIntoView({ behavior: 'smooth' });\n                }}\n                variant=\"outline\"\n                className=\"border-navy-primary text-navy-primary hover:bg-navy-primary hover:text-white\"\n                data-testid=\"gallery-contact\"\n              >\n                {t('gallery.cta.contact', 'Contact Us')}\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":14475},"client/src/components/reviews.tsx":{"content":"import { useTranslation } from \"react-i18next\";\nimport { ReviewDisplay } from \"@/components/review-display\";\nimport { Star, Users2 } from \"lucide-react\";\n\nexport default function Reviews() {\n  const { t } = useTranslation();\n\n  return (\n    <section id=\"reviews\" className=\"py-20 bg-background\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-16\">\n          <div className=\"flex justify-center mb-4\">\n            <div className=\"bg-navy-primary text-white p-4 rounded-full\">\n              <Star className=\"h-8 w-8\" />\n            </div>\n          </div>\n          <h2 className=\"text-4xl font-bold text-foreground mb-4\">\n            {t('reviews.title')}\n          </h2>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n            {t('reviews.subtitle')}\n          </p>\n        </div>\n\n        <div className=\"max-w-6xl mx-auto\">\n          <div className=\"mb-8\">\n            <div className=\"bg-card p-6 rounded-xl border border-border text-center\">\n              <Users2 className=\"w-12 h-12 text-navy-primary mx-auto mb-4\" />\n              <h3 className=\"text-2xl font-bold text-foreground mb-3\">\n                {t('reviews.authentic.title')}\n              </h3>\n              <p className=\"text-muted-foreground\">\n                {t('reviews.authentic.description')}\n              </p>\n            </div>\n          </div>\n\n          <ReviewDisplay />\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":1467},"client/src/pages/gallery.tsx":{"content":"import { Header, Gallery, Footer } from \"@/components\";\n\nexport function GalleryPage() {\n  return (\n    <div className=\"min-h-screen bg-background text-foreground\">\n      <Header />\n      <Gallery />\n      <Footer />\n    </div>\n  );\n}","size_bytes":234}},"version":1}